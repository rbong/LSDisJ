; This disassembly is only partially complete.

;; 00:0000 Most RSTs are unused
00:0000 rst_00
;; 00:0001 00:0001
;; 00:0001:replace:0007 ds $0007, $ff
00:0008 rst_08
;; 00:0008 00:0008
;; 00:0008:replace:0008 ds $0008, $ff
00:0010 rst_10
00:0018 rst_18
;; 00:001e Does nothing, used for breakpoints
00:0020 rst_20
;; 00:0020 00:0020
;; 00:0020:replace:0008 ds $0008, $ff
00:0028 rst_28
;; 00:0028 00:0028
;; 00:0028:replace:0008 ds $0008, $ff
00:0030 rst_30
;; 00:0030 00:0030
;; 00:0030:replace:0008 ds $0008, $ff
00:0038 rst_trigger_crash
;; 00:0039 Does nothing, used for breakpoints
;; 00:003c 00:003c
;; 00:003c:replace:0004 ds $0004, $ff

00:0040 vblank_interrupt
;; 00:0045 00:0045
;; 00:0045:replace:0003 ds $0003, $ff
00:0048 lcdc_interrupt
;; 00:0049 00:0049
;; 00:0049:replace:0007 ds $0007, $ff
00:0050 timer_overflow_interrupt
;; 00:0053 00:0053
;; 00:0053:replace:0005 ds $0005, $ff
00:0058 serial_transfer_complete_interrupt
;; 00:005b 00:005b
;; 00:005b:replace:0005 ds $0005, $ff
00:0060 joypad_transition_interrupt
00:0061 jump_00_0061
00:0061 .code:0008
;; 00:0061:r_op BANK(jump_01_7954)
;; 00:0066:l_op jump_01_7954
;; 00:0069 00:0069
;; 00:0069:replace:0097 ds $0100 - @, $ff

00:0100 Boot

00:0104 HeaderLogo
;; 00:0104 00:0104
;; 00:0104:replace:0048 NINTENDO_LOGO
00:0134 HeaderTitle
00:0134 .text:000c
00:013f HeaderManufacturerCode
00:013f .data:0004
00:0143 HeaderCGBFlag
;; 00:0143 Game supports CGB functions, but works on old gameboys also
00:0144 HeaderNewLicenseeCode
00:0144 .data:0002
00:0146 HeaderSGBFlag
;; 00:0146 No SGB functions (Normal Gameboy or CGB only game)
00:0146 .data:0001
00:0147 HeaderCartridgeType
;; 00:0147 00:0147
;; 00:0147:replace:0001 db CART_ROM_MBC5_RAM_BAT
00:0148 HeaderROMSize
00:0148 .data:0001
00:0149 HeaderRAMSize
00:0149 .data:0001
00:014a HeaderDestinationCode
;; 00:014a Destination is Japanese
00:014a .data:0001
00:014b HeaderOldLicenseeCode
00:014b .data:0001
00:014c HeaderMaskROMVersion
00:014c .data:0001
00:014d HeaderComplementCheck
;; 00:014d Checksums automatically calculated with rgbfix
00:014d .data:0001
00:014e HeaderGlobalChecksum_1
00:014e .data:0001
00:014f HeaderGlobalChecksum_2
00:014f .data:0001

00:0150 code_start
;; 00:0150 gbdk 2.95 libc/gb/crt0.s:.code_start (with modifications)
;; 00:0150 -
;; 00:0150 The labels in this subroutine are not local since they are possibly referenced elsewhere
;; 00:0152 Store CPU type 2 in E
;; 00:0155 Initialize stack at 0xe0000 instead of 0xc000 in gbdk
00:015f _code_start_1
;; 00:0166 Skip clearing from 0xfe00 to 0xfeff
;; 00:0166 Clear from 0xff80 to 0xffff
00:016b _code_start_2
;; 00:0173 Store CPU type 2
;; 00:0187 Copy refresh_oam routine to HIRAM
;; 00:018d:r_op end_refresh_oam - start_refresh_oam
00:018f _code_start_4
;; 00:0195 Skip installing interrupt routines
;; 00:01a6 V-Blank on, don't enable serial I/O yet
;; 00:01aa Don't turn sound off yet
;; 00:01b5 Skip erasing the malloc list and gsinit

00:01ba data_00_01ba
00:01ba .data:0026

00:01e0 MODE_TABLE
;; 00:01e0 gbdk 2.95 libc/gb/crt0.s:.MODE_TABLE
;; 00:01e0 Jump table for modes
00:01e0 .data:0120

00:081c data_dash_letters_string
00:081c .text:0015

00:0831 data_wave_play_type_strings
00:0831 data_manual_wave_play_type_string
00:0831 .text:0009
00:083a data_once_wave_play_type_string
00:083a .text:0009
00:0843 data_loop_wave_play_type_string
00:0843 .text:0009
00:084c data_pingpong_wave_play_type_string
00:084c .text:0009

00:0855 data_00_0855
00:0855 .data:00a2

00:08f7 call_00_08f7

00:0942 call_00_0942

00:09a8 data_00_09a8
00:09a8 .data:d8

00:0ad1 call_00_0ad1

00:0b43 call_00_0b43

00:0bed call_banked_call_old
;; 00:0bed Call a subroutine in another bank.
;; 00:0bed This version of call_banked_call uses extra instructions.
;; 00:0bed Args: bank, address (word)
;; 00:0bed Registers used: A, HL
00:0c0a call_banked_call_old_return
;; 00:0c0a Doesn't appear to actually do anything with register B or E

00:0c18 call_banked_call_arg_old
;; 00:0c18 Call a subroutine in another bank with an argument.
;; 00:0c18 This version of call_banked_call_arg uses extra instructions.
;; 00:0c18 Args: bank, address (word), arg
;; 00:0c18 Registers used: A, HL
00:0c39 call_banked_call_arg_old_return

00:0c49 call_banked_call_arg_2_old
;; 00:0c49 Call a subroutine in another bank with two byte arguments.
;; 00:0c49 Args: bank, address (word), arg1, arg2
;; 00:0c49 Registers used: A, HL
00:0c6f call_banked_call_arg_2_old_return

00:0c7e call_banked_call_arg_2_old_dup
;; 00:0c7e Duplicate of call_banked_call_arg_2.
00:0ca4 call_banked_call_arg_2_old_dup_return
;; 00:0ca4 Doesn't appear to actually do anything with register B or E

00:0cb4 call_banked_call_arg_3_old
;; 00:0cb4 Call a subroutine in another bank with three byte arguments.
;; 00:0cb4 Args: bank, address (word), arg1, arg2, arg3
;; 00:0cb4 Registers used: A, HL
00:0cde call_banked_call_arg_3_old_return

00:0ced call_00_0ced

00:0d3b call_00_0d3b

00:0d7a call_00_0d7a

00:0dca call_00_0dca

;; 00:0dd6:r_op BANK(call_1b_6b7a)
;; 00:0ddd:r_op BANK(call_1b_6b7a)
;; 00:0ddf:l_op call_1b_6b7a
;; 00:0de2:r_op BANK(call_01_4cf1)
;; 00:0de9:r_op BANK(call_01_4cf1)
;; 00:0deb:l_op call_01_4cf1
;; 00:0dee Assume the bank of call_01_48r8 is the same as call_01_4cf1
;; 00:0dee:l_op call_01_4848

;; 00:0e10 Assume the bank of call_01_4487 is the same as call_01_4cf1
;; 00:0e10:l_op call_01_4487
;; 00:0e46 Assume the bank of call_01_45d1 is the same as call_01_4cf1
;; 00:0e46:l_op call_01_45d1

;; 00:0e49 Assume the bank of call_01_48d4 is the same as call_01_4cf1
;; 00:0e49:l_op call_01_48d4

;; 00:0e4c:r_op BANK(call_1c_4057)
;; 00:0e53:r_op BANK(call_1c_4057)
;; 00:0e55:l_op call_1c_4057

;; 00:0e5e:r_op BANK(call_01_4811)
;; 00:0e65:r_op BANK(call_01_4811)
;; 00:0e67:l_op call_01_4811

;; 00:0e70:r_op BANK(call_1c_47b1)
;; 00:0e77:r_op BANK(call_1c_47b1)
;; 00:0e79:l_op call_1c_47b1

;; 00:0eaf:r_op BANK(call_07_6864)
;; 00:0eb6:r_op BANK(call_07_6864)
;; 00:0eb8:l_op call_07_6864

;; 00:0f4f:r_op BANK(call_02_6e87)
;; 00:0f56:r_op BANK(call_02_6e87)
;; 00:0f65:l_op call_02_6e87

;; 00:0f73:r_op BANK(call_01_4cfb)
;; 00:0f7a:r_op BANK(call_01_4cfb)
;; 00:0f81:l_op call_01_4cfb

;; 00:0fc4:r_op BANK(call_01_4d67)
;; 00:0fcb:r_op BANK(call_01_4d67)
;; 00:0fd2:l_op call_01_4d67

;; 00:0ff0:r_op BANK(call_1f_4a25)
;; 00:0ff7:r_op BANK(call_1f_4a25)
;; 00:0ff9:l_op call_1f_4a25

;; 00:102b:r_op BANK(call_02_7b9b)
;; 00:1032:r_op BANK(call_02_7b9b)
;; 00:1034:l_op call_02_7b9b

;; 00:1090:r_op BANK(call_04_49c5)
;; 00:1097:r_op BANK(call_04_49c5)
;; 00:10a7:l_op call_04_49c5

;; 00:10af:r_op BANK(call_05_43b7)
;; 00:10b6:r_op BANK(call_05_43b7)
;; 00:10d0:l_op call_05_43b7

;; 00:10d8:r_op BANK(call_05_43b7)
;; 00:10df:r_op BANK(call_05_43b7)
;; 00:10f9:l_op call_05_43b7

;; 00:1128:r_op BANK(call_1d_4d5f)
;; 00:112f:r_op BANK(call_1d_4d5f)
;; 00:1131:l_op call_1d_4d5f

00:1261 call_00_1261

00:12cf _main
;; 00:131f:r_op BANK(call_1c_40f2)
;; 00:1326:r_op BANK(call_1c_40f2)
;; 00:1328:l_op call_1c_40f2

;; 00:1350:r_op BANK(call_1d_603c)
;; 00:1357:r_op BANK(call_1d_603c)
;; 00:1359:l_op call_1d_603c

;; 00:13ab:r_op BANK(call_01_4fec)
;; 00:13b2:r_op BANK(call_01_4fec)
;; 00:13b4:l_op call_01_4fec

;; 00:13c5 Assume the bank of call_01_50a0 is the same ass call_01_4fec
;; 00:13c5:l_op call_01_50a0

;; 00:13c8 Assume the bank of call_01_7869 is the same ass call_01_4fec
;; 00:13c8:l_op call_01_7869

;; 00:13de Assume the bank of call_01_7881 is the same ass call_01_4fec
;; 00:13de:l_op call_01_7881

00:14ca call_00_14ca

00:155d call_00_155d

00:1644 call_00_1644

00:172f call_00_172f

00:1768 call_jump_hl
;; 00:1768 Jump to the address stored in HL.

00:1769 call_banked_call
;; 00:1769 Call a subroutine in another bank.
;; 00:1769 Args: bank, address (word)
;; 00:1769 Registers used: A, HL

00:178a call_banked_call_arg
;; 00:178a Call a subroutine in another bank with an argument.
;; 00:178a Args: bank, address (word), arg
;; 00:178a Registers used: A, HL

00:17bb call_00_17bb

00:1c33 call_00_1c33

00:1c71 call_00_1c71

00:1cb6 call_00_1cb6

00:1ce0 call_00_1ce0

00:1d23 call_00_1d23

;; 00:1d99:r_op BANK(call_02_5f28)
;; 00:1da0:r_op BANK(call_02_5f28)
;; 00:1da2:l_op call_02_5f28

;; 00:1e16:r_op BANK(call_02_7b9b)
;; 00:1e1d:r_op BANK(call_02_7b9b)
;; 00:1e1f:l_op call_02_7b9b

;; 00:1e3a:r_op BANK(call_02_7b9b)
;; 00:1e41:r_op BANK(call_02_7b9b)
;; 00:1e43:l_op call_02_7b9b
;; 00:1e46:l_op call_02_7b9b

00:1f8c call_00_1f8c

00:207b call_00_207b

;; 00:2096:r_op BANK(call_02_7030)
;; 00:209d:r_op BANK(call_02_7030)
;; 00:209f:l_op call_02_7030

;; 00:2273:r_op BANK(call_02_701d)
;; 00:227a:r_op BANK(call_02_701d)
;; 00:227f:l_op call_02_701d

;; 00:228b:r_op BANK(call_1b_5b7a)
;; 00:2292:r_op BANK(call_1b_5b7a)
;; 00:229e:l_op call_1b_5b7a

;; 00:22c1:r_op BANK(call_02_5534)
;; 00:22c8:r_op BANK(call_02_5534)
;; 00:22ca:l_op call_02_5534

;; 00:235f:r_op BANK(call_1c_72bf)
;; 00:2366:r_op BANK(call_1c_72bf)
;; 00:2368:l_op call_1c_72bf

00:2490 call_00_2490

;; 00:249e:r_op BANK(call_01_6cef)
;; 00:24a5:r_op BANK(call_01_6cef)
;; 00:24a7:l_op call_01_6cef

;; 00:24c7:r_op BANK(call_05_4040)
;; 00:24ce:r_op BANK(call_05_4040)
;; 00:24d0:l_op call_05_4040

;; 00:24dc:r_op BANK(call_1e_4000)
;; 00:24e3:r_op BANK(call_1e_4000)
;; 00:24e5:l_op call_1e_4000

;; 00:2546:r_op BANK(call_04_4ce5)
;; 00:254d:r_op BANK(call_04_4ce5)
;; 00:254f:l_op call_04_4ce5

;; 00:2555:r_op BANK(call_1d_4202)
;; 00:255c:r_op BANK(call_1d_4202)
;; 00:255e:l_op call_1d_4202

;; 00:2564:r_op BANK(call_06_58e8)
;; 00:256b:r_op BANK(call_06_58e8)
;; 00:256d:l_op call_06_58e8

;; 00:2573:r_op BANK(call_07_4552)
;; 00:257a:r_op BANK(call_07_4552)
;; 00:257c:l_op call_07_4552

;; 00:2582:r_op BANK(call_05_4762)
;; 00:2589:r_op BANK(call_05_4762)
;; 00:258b:l_op call_05_4762

;; 00:2591:r_op BANK(call_03_4e06)
;; 00:2598:r_op BANK(call_03_4e06)
;; 00:259a:l_op call_03_4e06

;; 00:25a3:r_op BANK(call_06_4ec2)
;; 00:25aa:r_op BANK(call_06_4ec2)
;; 00:25ac:l_op call_06_4ec2

;; 00:25b2:r_op BANK(call_1b_5c17)
;; 00:25b9:r_op BANK(call_1b_5c17)
;; 00:25bb:l_op call_1b_5c17

;; 00:25c1:r_op BANK(call_1d_68b2)
;; 00:25c8:r_op BANK(call_1d_68b2)
;; 00:25ca:l_op call_1d_68b2

;; 00:25d3:r_op BANK(call_06_41a2)
;; 00:25da:r_op BANK(call_06_41a2)
;; 00:25dc:l_op call_06_41a2

;; 00:25e2:r_op BANK(call_1c_57bb)
;; 00:25e9:r_op BANK(call_1c_57bb)
;; 00:25eb:l_op call_1c_57bb

;; 00:25f1:r_op BANK(call_1b_4a62)
;; 00:25f8:r_op BANK(call_1b_4a62)
;; 00:25fa:l_op call_1b_4a62

;; 00:264f:r_op BANK(call_1f_642a)
;; 00:2656:r_op BANK(call_1f_642a)
;; 00:2658:l_op call_1f_642a

;; 00:265e:r_op BANK(call_1d_423d)
;; 00:2665:r_op BANK(call_1d_423d)
;; 00:2667:l_op call_1d_423d

;; 00:266d:r_op BANK(call_05_4967)
;; 00:2674:r_op BANK(call_05_4967)
;; 00:2676:l_op call_05_4967

;; 00:267c:r_op BANK(call_06_5a03)
;; 00:2683:r_op BANK(call_06_5a03)
;; 00:2685:l_op call_06_5a03

;; 00:268b:r_op BANK(call_07_4788)
;; 00:2692:r_op BANK(call_07_4788)
;; 00:2694:l_op call_07_4788

;; 00:26bc:r_op BANK(call_06_7235)
;; 00:26c3:r_op BANK(call_06_7235)
;; 00:26c5:l_op call_06_7235
;; 00:26c8:l_op call_06_741e

;; 00:27a8:r_op BANK(call_02_6171)
;; 00:27af:r_op BANK(call_02_6171)
;; 00:27c1:l_op call_02_6171

;; 00:27d9:r_op BANK(call_1f_6ff1)
;; 00:27e0:r_op BANK(call_1f_6ff1)
;; 00:27e2:l_op call_1f_6ff1

;; 00:28d4:r_op BANK(call_1f_6ff1)
;; 00:28db:r_op BANK(call_1f_6ff1)
;; 00:28dd:l_op call_1f_6ff1

;; 00:2a12:r_op BANK(call_1f_6ff1)
;; 00:2a19:r_op BANK(call_1f_6ff1)
;; 00:2a1b:l_op call_1f_6ff1

;; 00:2a69:r_op BANK(call_04_5b4e)
;; 00:2a70:r_op BANK(call_04_5b4e)
;; 00:2a72:l_op call_04_5b4e

;; 00:2a79:r_op BANK(call_1d_43f7)
;; 00:2a80:r_op BANK(call_1d_43f7)
;; 00:2a82:l_op call_1d_43f7

;; 00:2a89:r_op BANK(call_06_5aa1)
;; 00:2a90:r_op BANK(call_06_5aa1)
;; 00:2a92:l_op call_06_5aa1

;; 00:2a99:r_op BANK(call_07_4adb)
;; 00:2aa0:r_op BANK(call_07_4adb)
;; 00:2aa2:l_op call_07_4adb

;; 00:2aa9:r_op BANK(call_05_4b5d)
;; 00:2ab0:r_op BANK(call_05_4b5d)
;; 00:2ab2:l_op call_05_4b5d

;; 00:2ab9:r_op BANK(call_03_53fd)
;; 00:2ac0:r_op BANK(call_03_53fd)
;; 00:2ac2:l_op call_03_53fd

;; 00:2ac9:r_op BANK(call_1b_53e8)
;; 00:2ad0:r_op BANK(call_1b_53e8)
;; 00:2ad2:l_op call_1b_53e8

;; 00:2ad9:r_op BANK(call_06_5029)
;; 00:2ae0:r_op BANK(call_06_5029)
;; 00:2ae2:l_op call_06_5029

;; 00:2ae9:r_op BANK(call_1b_5dbf)
;; 00:2af0:r_op BANK(call_1b_5dbf)
;; 00:2af2:l_op call_1b_5dbf

;; 00:2af9:r_op BANK(call_1d_713f)
;; 00:2b00:r_op BANK(call_1d_713f)
;; 00:2b02:l_op call_1d_713f

;; 00:2b0c:r_op BANK(call_06_431d)
;; 00:2b13:r_op BANK(call_06_431d)
;; 00:2b15:l_op call_06_431d

;; 00:2b1c:r_op BANK(call_1c_59e6)
;; 00:2b23:r_op BANK(call_1c_59e6)
;; 00:2b25:l_op call_1c_59e6

;; 00:2b2c:r_op BANK(call_1b_4bc3)
;; 00:2b33:r_op BANK(call_1b_4bc3)
;; 00:2b35:l_op call_1b_4bc3

00:2c57 call_00_2c57

00:2c79 call_00_2c79

00:2cc5 data_channel_label_strings
00:2cc5 data_noise_channel_label_string
00:2cc5 .text:0004
00:2cc9 data_pulse1_channel_label_string
00:2cc9 .text:0004
00:2ccd data_pulse2_channel_label_string
00:2ccd .text:0004
00:2cd1 data_wave_channel_label_string
00:2cd1 .text:0004

00:2d31 call_00_2d31

00:2de6 call_00_2de6

00:2e22 call_00_2e22

00:2f26 call_00_2f26

00:313e call_00_313e

00:3155 call_00_3155

00:3183 call_00_3183

00:31bc call_00_31bc

00:31d3 call_00_31d3

00:31ea call_00_31ea

00:3201 call_00_3201

00:32b0 font_copy_uncompressed
;; 00:32b0 gbdk 2.95 libc/gb/font.ms:font_copy_uncompressed
;; 00:32b0
;; 00:32b0 Copy uncompressed 16 byte tiles.
;; 00:32b0 Uses the current fg_colour and bg_colour fields.
;; 00:32b0
;; 00:32b0 Entry conditions:
;; 00:32b0   BC = copy from address
;; 00:32b0   HL = copy to address (must be aligned to UWORD boundary)
;; 00:32b0   DE = count (cells * 8)
;; 00:32b0
;; 00:32b0 Registers used: A, BC, DE, HL
00:32bb .font_copy_uncompressed_4
00:32c0 .font_copy_uncompressed_1
00:32c9 .font_copy_uncompressed_1_b
00:32dd .font_copy_uncompressed_2

00:32e6 font_load
;; 00:32e6 gbdk 2.95 libc/gb/font.ms:font_load
;; 00:32e6 Load a font.
;; 00:32e6 Entry conditions: HL = font to load
;; 00:32e6 Registers used: A, B, DE, HL
00:32ef .font_load_find_slot
00:3301 .font_load_found
00:3325 .font_load_exit

00:332e font_copy_current
;; 00:332e gbdk 2.95 libc/gb/font.ms:font_copy_current (with modifications)
;; 00:332e Copy the tiles from the current font into VRAM.
;; 00:332e Registers used: A, BC, DE, HL
;; 00:332e See: font_copy_uncompressed
00:335a .font_copy_current_copy
;; 00:3370 Compressed fonts are not supported, jump straight to font_copy_uncompressed

00:3373 font_set
;; 00:3373 gbdk 2.95 libc/gb/font.ms:font_set
;; 00:3373 Set the current font.
;; 00:3373 Entry conditions: HL = font
;; 00:3373 Registers used: A, HL

00:3380 _font_load
;; 00:3380 gbdk 2.95 libc/gb/font.ms:_font_load
;; 00:3380 Load a font.
;; 00:3380 Args: font (word)
;; 00:3380 See: font_load

00:338e _font_set
;; 00:338e gbdk 2.95 libc/gb/font.ms:_font_set
;; 00:338e Set the current font.
;; 00:338e Args: font (word)
;; 00:338e See: font_set

00:339d _font_init
;; 00:339d gbdk 2.95 libc/gb/font.ms:_font_init (with modifications)
;; 00:339d Initialize the font system.
;; 00:339d Registers used: A, HL
00:33ac .font_init_1
;; 00:33ba Skip calling .cls

00:33d8 tmode
;; 00:33d8 gbdk 2.95 libc/gb/font.ms:.tmode (with modifications)
;; 00:33d8 Enter text mode.
;; 00:33d8 Registers used: A
;; 00:33df Skip removing interrupts since they're unused
00:33e2 .tmode_1

00:33ef tmode_out
;; 00:33ef gbdk 2.95 libc/gb/font.ms:.tmode_out

00:33fc _rand_randw
;; 00:33fc gbdk 2.95 libc/gb/rand.s:_rand/_randw
;; 00:33fc Generate a random number.
;; 00:33fc Result: DE
;; 00:33fc Registers used: A, DE, HL

00:3427 _cpu_fast
;; 00:3427 gbdk 2.95 libc/gb/cgb.s:_cpu_fast
;; 00:3427 Enable speed switch (CGB only).
;; 00:3427 Registers used: AF, HL

00:3442 call_00_3442

00:346a send_byte
;; 00:346a gbdk 2.95 libc/gb/serial.s:.send_byte/_send_byte
;; 00:346a Send the byte in IO_OUT to the serial port.
;; 00:346a Registers used: A

00:347d receive_byte
;; 00:347d gbdk 2.95 libc/gb/serial.s:.receive_byte/_receive_byte
;; 00:347d Receive byte from the serial port in IO_IN.
;; 00:347d Registers used: A

00:348e set_mode
;; 00:348e gbdk 2.95 libc/gb/crt0.s:.set_mode
;; 00:348e Sets the current mode. Will jump to the initialization routine.
;; 00:348e Entry conditions: L = mode
;; 00:348e Registers used: A, BC, HL

00:349e display_off
;; 00:349e gbdk 2.95 libc/gb/crt0.s:.display_off
;; 00:349e Turns off the screen.
;; 00:349e Registers used: A
;; 00:349e -
;; 00:349e The labels in this subroutine are not local since they are possibly referenced elsewhere
00:34a2 _display_off_1
00:34a8 _display_off_2

00:34b5 start_refresh_oam
;; 00:34b5 gbdk 2.95 libc/gb/crt0.s:.start_refresh_OAM (with modifications)
;; 00:34b5
;; 00:34b5 Copies OAM data to OAM RAM.
;; 00:34b5
;; 00:34b5 Exit conditions:
;; 00:34b5   The value at address HL will be cleared.
;; 00:34b5
;; 00:34b5 Registers used: A
;; 00:34b5:r_op _OAM
00:34bb .start_refresh_oam_1
00:34c0 end_refresh_oam

00:34c0 serial_io
;; 00:34c0 gbdk 2.95 libc/gb/crt0.s:.serial_io (with modifications)
;; 00:34c0 Serial interrupt handler.
00:34d2 .serial_io_10
00:34e0 .serial_io_11
00:34e2 .serial_io_12
;; 00:34e2 Skip using external clock and replying with idle byte
00:34e5 .serial_io_99
;; 00:34e9 TODO: document return handler at 00:167f

00:34ec _mode
;; 00:34ec gbdk 2.95 libc/gb/crt0.s:_mode
;; 00:34ec Sets the current mode.
;; 00:34ec Args: mode
;; 00:34f1 Use jr instead of call to jump directly back

00:34f3 _get_mode
;; 00:34f3 gbdk 2.95 libc/gb/crt0.s:_get_mode
;; 00:34f3 Gets the current mode.
;; 00:34f3 Result: E
;; 00:34f3 Registers used: E, HL

00:34f8 _enable_interrupts
;; 00:34f8 gbdk 2.95 libc/gb/crt0.s:_enable_interrupts

00:34fa _disable_interrupts
;; 00:34fa gbdk 2.95 libc/gb/crt0.s:_disable_interrupts

00:34fc _reset
;; 00:34fc gbdk 2.95 libc/gb/crt0.s:.reset/_reset

00:35b4 digits
;; 00:35b4 gbdk 2.95 libc/gb/digits.c:digits
00:35b4 .text:0011

00:36e0 call_00_36e0

00:3717 _modslong_divslong_mulslong

00:3718 _divschar
;; 00:3718 gbdk 2.95 libc/asm/gbz80/div.s:__divschar
;; 00:3718 Divide chars.
;; 00:3718 Args: dividend, divisor
;; 00:3718 Result: E
;; 00:3718 See: div8_mod8

00:3724 _modschar
;; 00:3724 gbdk 2.95 libc/asm/gbz80/div.s:__modschar
;; 00:3724 Perform modulus on chars.
;; 00:3724 Args: dividend, divisor
;; 00:3724 Result: E
;; 00:3724 See: div8_mod8

00:372f _divsint
;; 00:372f gbdk 2.95 libc/asm/gbz80/div.s:__divsint
;; 00:372f Divide ints.
;; 00:372f Args: dividend (word), divisor (word)
;; 00:372f Result: DE
;; 00:372f See: div16_mod16

00:3740 _modsint
;; 00:3740 gbdk 2.95 libc/asm/gbz80/div.s:__modsint
;; 00:3740 Perform modulus on ints.
;; 00:3740 Args: dividend (word), divisor (word)
;; 00:3740 Result: DE
;; 00:3740 See: div16_mod16

00:374f _divuchar
;; 00:374f gbdk 2.95 libc/asm/gbz80/div.s:__divuchar
;; 00:374f Divide unsigned chars.
;; 00:374f Args: dividend, divisor
;; 00:374f Result: E
;; 00:374f See: divu8_modu8

00:375b _moduchar
;; 00:375b gbdk 2.95 libc/asm/gbz80/div.s:__moduchar
;; 00:375b Perform modulus on unsigned chars.
;; 00:375b Args: dividend, divisor
;; 00:375b Result: E
;; 00:375b See: divu8_modu8

00:3766 _divuint
;; 00:3766 gbdk 2.95 libc/asm/gbz80/div.s:__divuint
;; 00:3766 Divide unsigned ints.
;; 00:3766 Args: dividend (word), divisor (word)
;; 00:3766 Result: DE
;; 00:3766 See: divu16_modu16

00:3777 _moduint
;; 00:3777 gbdk 2.95 libc/asm/gbz80/div.s:__moduint
;; 00:3777 Perform modulus on unsigned ints.
;; 00:3777 Args: dividend (word), divisor (word)
;; 00:3777 Result: DE
;; 00:3777 See: divu16_modu16

00:3786 div8_mod8
;; 00:3786 gbdk 2.95 libc/asm/gbz80/div.s:.div8/.mod8
;; 00:3786
;; 00:3786 8-bit division.
;; 00:3786
;; 00:3786 Entry conditions:
;; 00:3786   C = dividend
;; 00:3786   E = divisor
;; 00:3786
;; 00:3786 Exit conditions:
;; 00:3786   C = quotient
;; 00:3786   E = remainder
;; 00:3786   If divisor is non-zero, carry=0
;; 00:3786   If divisor is 0, carry=1 and both quotient and remainder are 0
;; 00:3786
;; 00:3786 Registers used: AF, BC, DE, HL

00:378e div16_mod16
;; 00:378e gbdk 2.95 libc/asm/gbz80/div.s:.div16/.mod16
;; 00:378e
;; 00:378e 16-bit division.
;; 00:378e
;; 00:378e Entry conditions:
;; 00:378e   BC = dividend
;; 00:378e   DE = divisor
;; 00:378e
;; 00:378e Exit conditions:
;; 00:378e   BC = quotient
;; 00:378e   DE = remainder
;; 00:378e
;; 00:378e See: div8_mod8
00:379c .chkde
00:37a6 .dodiv
00:37ae .dodiv_1
00:37b9 .dorem

00:37c4 divu8_modu8
;; 00:37c4 gbdk 2.95 libc/asm/gbz80/div.s:.divu8/.modu8
;; 00:37c4 8-bit unsigned division.
;; 00:37c4 See: div8

00:37c7 divu16_modu16
;; 00:37c7 gbdk 2.95 libc/asm/gbz80/div.s:.divu16/.modu16 (with modifications)
;; 00:37c7 16-bit unsigned division.
;; 00:37c7 See: div16
00:37d2 .divide
;; 00:37d8 Instead of looping, as in gbdk 2.95, call a function 16 times
;; 00:3808 libc/asm/gbz80/div.s:.nodrop (without loop counter)

00:3812 call_divide_loop
;; 00:3812 gbdk 2.95 libc/asm/gbz80/div.s:.divide loop separated into its own function
00:3826 .drop

00:3829 initrand
;; 00:3829 gbdk 2.95 libc/gb/rand.s:_initrand
;; 00:3829 Set the random seed.
;; 00:3829 Registers used: A, HL

00:3834 _strcpy
;; 00:3834 gbdk 2.95 libc/asm/gbz80/asm_string.s:_strcpy
;; 00:3834 char *strcpy(char *dest, const char *source)
;; 00:3834 Result: DE = dest
00:383e .strcpy_1

00:3846 _memcpy
;; 00:3846 gbdk 2.95 libc/asm/gbz80/asm_string.s:_memcpy
;; 00:3846 void *memcpy(void *dest, const void *source, int count)
;; 00:3846 Result: DE = dest
00:385a .memcpy_1
00:385d .memcpy_2

00:3866 _strcmp
;; 00:3866 gbdk 2.95 libc/asm/gbz80/asm_string.s:_strcmp
;; 00:3866 int strcmp(const char *s1, const char *s2)
;; 00:3866 Result: DE = 0 if equal, 1 if s1 is greater than s2, -1 if s1 is less than s2
00:3871 .strcmp_2
00:3878 .strcmp_1
00:387c .strcmp_3
00:3881 .strcmp_4
00:3889 .strcmp_5

00:388a call_mem_fill
;; 00:388a Write a repeating byte to memory.
;; 00:388a Entry conditions: HL = address, B = byte, DE = size
;; 00:388a Registers used: A, B, DE, HL

00:3892 _call_mem_fill
;; 00:3892 Write a repeating byte to memory.
;; 00:3892 Args: address (word), byte, size (word)
;; 00:3892 Registers used: A, HL

00:38a5 _mulschar_muluchar
;; 00:38a5 gbdk 2.95 libc/asm/gbz80/mul.s:__mulschar/__muluchar
;; 00:38a5 Multiply chars.
;; 00:38a5 Args: multiplicand, multiplier
;; 00:38a5 Result: DE
;; 00:38a5 See: mul8_mulu8

00:38b1 _mulsint_muluint
;; 00:38b1 gbdk 2.95 libc/asm/gbz80/mul.s:__mulsint/__muluint
;; 00:38b1 Multiply ints.
;; 00:38b1 Args: multiplicand (word), multiplier (word)
;; 00:38b1 Result: DE
;; 00:38b1 See: mul16_mulu16

00:38c2 mul8_mulu8
;; 00:38c2 gbdk 2.95 libc/asm/gbz80/mul.s:.mul8/.mulu8
;; 00:38c2
;; 00:38c2 8-bit multiplication.
;; 00:38c2
;; 00:38c2 Entry conditions:
;; 00:38c2   C = dividend
;; 00:38c2   E = divisor
;; 00:38c2
;; 00:38c2 Exit conditions:
;; 00:38c2   DE = product
;; 00:38c2
;; 00:38c2 Registers used: AF, BC, DE, HL

00:38c5 mul16_mulu16
;; 00:38c5 gbdk 2.95 libc/asm/gbz80/mul.s:.mul16/.mulu16
;; 00:38c5
;; 00:38c5 16-bit multiplication.
;; 00:38c5
;; 00:38c5 Entry conditions:
;; 00:38c5   BC = dividend
;; 00:38c5   DE = divisor
;; 00:38c5
;; 00:38c5 Exit conditions:
;; 00:38c5   DE = product (least significant word)
;; 00:38c5
;; 00:38c5 Registers used: AF, BC, DE, HL
00:38ca .mlp
00:38d1 .mlp1
00:38da .mend

00:38db _set_bkg_palette
;; 00:38db gbdk 2.95 libc/gb/cgb.s:_set_bkg_palette
;; 00:38db
;; 00:38db Set background palettes.
;; 00:38db
;; 00:38db Args:
;; 00:38db   first_palette
;; 00:38db   nb_palettes (count)
;; 00:38db   rgb_data (address)
;; 00:38db
;; 00:38db Registers used: AF, HL
00:38f1 .set_bkg_palette_1

00:3906 vbl
;; 00:3906 gbdk 2.95 libc/gb/drawing.s:.vbl

00:3911 lcd
;; 00:3911 gbdk 2.95 libc/gb/drawing.s:.lcd

00:391e jpad
;; 00:391e gbdk 2.95 libc/gb/pad.s:.jpad (with modifications)
;; 00:391e
;; 00:391e Get keypad button status.
;; 00:391e
;; 00:391e Exit conditions:
;; 00:391e   E = status (buttons held)
;; 00:391e       0x80: Start
;; 00:391e       0x40: Select
;; 00:391e       0x20: B
;; 00:391e       0x10: A
;; 00:391e       0x08: Down
;; 00:391e       0x04: Up
;; 00:391e       0x02: Left
;; 00:391e       0x01: Right
;; 00:391e
;; 00:391e Registers used: A, E
;; 00:394a Use E for return status instead of A like in gbdk
;; 00:394a The _joypad subroutine handles this in gbdk
;; 00:394a This is a little faster

00:394c delay
;; 00:394c gbdk 2.95 libc/gb/delay.s:.delay
;; 00:394c
;; 00:394c Wait for a given period of time.
;; 00:394c
;; 00:394c Entry conditions:
;; 00:394c   DE = milliseconds (1 to 65536, 0 = 65536)
;; 00:394c
;; 00:394c Registers used: AF, DE
00:3952 .ldlp
00:3954 .delay_1
00:3956 .delay_2
00:3958 .delay_3
00:395a .delay_4
00:395c .delay_5
00:3964 .delay_6
00:3966 .delay_7
00:3968 .delay_8
00:3969 dly
00:396f .dlp
00:3971 .dly_1
00:3973 .dly_2
00:3975 .dly_3
00:3977 .dly_4
00:3979 .dly_5
00:3980 .dly_6
00:3982 .dly_7
00:3984 .dly_8

00:3986 _delay
;; 00:3986 gbdk 2.95 libc/gb/delay.s:_delay
;; 00:3986 Wait for a given period of time.
;; 00:3986 Args: milliseconds (word)
;; 00:3986 See: delay

00:398f init_vram
;; 00:398f gbdk 2.95 libc/gb/init_tt.s:.init_vram
;; 00:398f
;; 00:398f Fill part of the VRAM with a value.
;; 00:398f
;; 00:398f Entry conditions:
;; 00:398f   B = value
;; 00:398f   DE = size
;; 00:398f   HL = address
;; 00:398f
;; 00:398f Registers used: A, B, DE, HL

00:399d init_wtt
;; 00:399d gbdk 2.95 libc/gb/init_tt.s:.init_wtt
;; 00:399d Fill window tile table with a value.
;; 00:399d Entry conditions: B = value
;; 00:399d Registers used: A, B, DE, HL
;; 00:39a3:r_op _SCRN0
00:39a8 .init_wtt_1
;; 00:39a8:r_op _SCRN1

00:39ad init_btt
;; 00:39ad gbdk 2.95 libc/gb/init_tt.s:.init_btt
;; 00:39ad Fill background tile table with a value.
;; 00:39ad See: init_wtt
;; 00:39b3:r_op _SCRN0
00:39b8 .init_btt_1
;; 00:39b8:r_op _SCRN1

00:39bb init_tt
;; 00:39bb gbdk 2.95 libc/gb/init_tt.s:.init_tt
;; 00:39bb Fill a tile table with a value.
;; 00:39bb See: init_wtt, init_btt

00:39c1 copy_vram
;; 00:39c1 gbdk 2.95 libc/gb/cpy_data.s:.copy_vram
;; 00:39c1
;; 00:39c1 Copy part of VRAM.
;; 00:39c1
;; 00:39c1 Entry conditions:
;; 00:39c1   BC = copy from address
;; 00:39c1   HL = copy to address
;; 00:39c1   DE = count

00:39d0 _set_bkg_tiles
;; 00:39d0 gbdk 2.95 libc/gb/set_bk_t.s:_set_bkg_tiles
;; 00:39d0 Set background tiles.
;; 00:39d0 Registers used: A, DE, HL

00:39e4 set_xy_wtt
;; 00:39e4 gbdk 2.95 libc/gb/set_xy_t.s:.set_xy_wtt
;; 00:39e4 Store window tile table.
;; 00:39e4
;; 00:39e4 Entry conditions:
;; 00:39e4   BC = store at address
;; 00:39e4   D = X
;; 00:39e4   E = Y
;; 00:39e4   H = width
;; 00:39e4   L = height
;; 00:39e4
;; 00:39e4 Registers used: A, BC, DE, HL
;; 00:39eb:r_op _SCRN0
00:39f0 .set_xy_wtt_1
;; 00:39f0:r_op _SCRN1

00:39f5 set_xy_btt
;; 00:39f5 gbdk 2.95 libc/gb/set_xy_t.s:.set_xy_btt
;; 00:39f5 Store background tile table.
;; 00:39f5 See: set_xy_wtt
;; 00:39fc:r_op _SCRN0
00:3a01 .set_xy_btt_1
;; 00:3a01 Skip jump to the next instruction
;; 00:3a01:r_op _SCRN1

00:3a04 set_xy_tt
;; 00:3a04 gbdk 2.95 libc/gb/set_xy_t.s:.set_xy_tt (with modifications)
;; 00:3a04 Store tile table.
;; 00:3a04 See: set_xy_wtt, set_xy_btt
00:3a0c .set_xy_tt_1
00:3a10 .set_xy_tt_2
00:3a18 .set_xy_tt_3
;; 00:3a20 TODO: document changes
00:3a35 .set_xy_tt_4

00:3a36 call_set_default_ram_values
;; 00:3a36 Set RAM addresses used to their default values.
;; 00:3a36 Registers used: A, DE, HL
;; 00:3bce Set the default screen to the project screen

00:3de7 data_bank_00_padding
;; 00:3de7 00:3de7
;; 00:3de7:replace:0219 ds $4000 - @, $ff

01:4487 call_01_4487

;; 01:44aa:r_op LOW(call_00_1f8c)
;; 01:44ac:r_op HIGH(call_00_1f8c)
;; 01:44af:r_op BANK(call_00_1f8c)

01:45d1 call_01_45d1

01:4557 cart_test_title_string
01:4557 .text:000f
01:4566 cart_test_rom_string
01:4566 .text:0007
01:456d cart_test_rom_ok_string
01:456d .text:0004
01:4571 cart_test_rom_fail_string
01:4571 .text:0006
01:4577 cart_test_rom_error_1_string
01:4577 .text:0012
01:4589 cart_test_rom_error_2_string
01:4589 .text:0010
01:4599 cart_test_sram_string
01:4599 .text:0008
01:45a1 cart_test_sram_ok_string
01:45a1 .text:0004
01:45a5 cart_test_sram_fail_string
01:45a5 .text:0006
01:45ab cart_test_sram_error_1_string
01:45ab .text:0012
01:45bd cart_test_sram_error_2_string
01:45bd .text:0014

01:493b call_01_493b

01:4a49 call_01_4a49

;; 01:45e2:r_op LOW(call_07_63ff)
;; 01:45e4:r_op HIGH(call_07_63ff)
;; 01:45e7:r_op BANK(call_07_63ff)

01:4811 call_01_4811

01:4848 call_01_4848

01:48d4 call_01_48d4

01:4c61 call_01_4c61

01:4cf1 call_01_4cf1

01:4cfb call_01_4cfb

01:4d67 call_01_4d67

01:4dd3 call_01_4dd3

01:4e43 call_01_4e43

01:4eb3 call_01_4eb3

;; 01:4f45:r_op LOW(call_01_75c6)
;; 01:4f47:r_op HIGH(call_01_75c6)
;; 01:4f4a:r_op BANK(call_01_75c6)

01:4f59 call_01_4f59

01:4f99 call_01_4f99

01:4fec call_01_4fec

01:50a0 call_01_50a0

01:518c call_01_518c

01:51ee data_01_51ee
01:51ee .data:0006

01:51f4 data_pitch_shift_type_strings
01:51f4 data_step_pitch_shift_type_string
01:51f4 .text:0005
01:51f9 data_tick_pitch_shift_type_string
01:51f9 .text:0005
01:51fe data_drum_pitch_shift_type_string
01:51fe .text:0005
01:5203 data_fast_pitch_shift_type_string
01:5203 .text:0005

01:5208 call_01_5208

01:522d call_01_522d

01:5253 call_01_5253

;; 01:52ce:r_op LOW(call_1c_717c)
;; 01:52d0:r_op HIGH(call_1c_717c)
;; 01:52d3:r_op BANK(call_1c_717c)

01:52de data_copied_instrument_string
01:52de .text:000d

01:5331 call_01_5331

01:546e call_01_546e

;; 01:54ad:r_op LOW(call_1f_4b8c)
;; 01:54af:r_op HIGH(call_1f_4b8c)
;; 01:54b4:r_op BANK(call_1f_4b8c)

01:54ff data_out_of_tables_error_string
01:54ff .text:000f

01:550e data_cloned_instrument_table_string
01:550e .text:000d

01:551b call_01_551b

;; 01:55b9:r_op LOW(call_03_4e06)
;; 01:55bb:r_op HIGH(call_03_4e06)
;; 01:55be:r_op BANK(call_03_4e06)

01:55d4 data_pasted_instrument_string
01:55d4 .text:000d

01:6cef call_01_6cef

01:6d3b call_01_6d3b

01:6d5c call_01_6d5c

;; 01:6e77:r_op LOW(call_1c_4057)
;; 01:6e79:r_op HIGH(call_1c_4057)
;; 01:6e7e:r_op BANK(call_1c_4057)

01:6f87 data_command_help_strings
01:6f87 data_command_help_title_string
01:6f87 .text:0030
01:6fb7 data_command_help_too_busy_error_string
01:6fb7 .text:000a
01:6fc1 data_a_command_help_string
01:6fc1 .text:0023
01:6fe4 data_b_command_help_string
01:6fe4 .text:003b
01:701f data_b_table_command_help_string
01:701f .text:0048
01:7067 data_c_command_help_string
01:7067 .text:0027
01:708e data_d_command_help_string
01:708e .text:0016
01:70a4 data_e_command_help_string
01:70a4 .text:0088
01:712c data_f_pulse2_command_help_string
01:712c .text:0020
01:714c data_f_wave_command_help_string
01:714c .text:0034
01:7180 data_g_command_help_string
01:7180 .text:0016
01:7196 data_h_command_help_string
01:7196 .text:0062
01:71f8 data_h_table_command_help_string
01:71f8 .text:004b
01:7243 data_k_command_help_string
01:7243 .text:001b
01:725e data_l_command_help_string
01:725e .text:00b5
01:7313 data_o_command_help_string
01:7313 .text:001b
01:732e data_p_command_help_string
01:732e .text:002d
01:735b data_r_command_help_string
01:735b .text:006a
01:73c5 data_t_command_help_string
01:73c5 .text:0032
01:73f7 data_v_command_help_string
01:73f7 .text:0023
01:741a data_w_command_help_string
01:741a .text:0008
01:7422 data_w_kit_command_help_string
01:7422 .text:0023
01:7445 data_z_command_help_string
01:7445 .text:0048

01:748d data_01_748d
01:748d .data:0014
01:74a1 data_01_74a1
01:74a1 .data:0014

01:74b5 data_screen_name_strings
01:74b5 data_live_screen_name_string
01:74b5 .text:0005
01:74ba data_song_screen_name_string
01:74ba .text:0005
01:74bf data_chain_screen_name_string
01:74bf .text:0007
01:74c6 data_phrase_screen_name_string
01:74c6 .text:0008
01:74ce data_table_screen_name_string
01:74ce .text:0007
01:74d5 data_project_screen_name_string
01:74d5 .text:0009
01:74de data_file_screen_name_string
01:74de .text:0006
01:74e4 data_instrument_screen_title_string
01:74e4 .text:0007
01:74eb data_wave_screen_title_string
01:74eb .text:0006
01:74f1 data_synth_screen_title_string
01:74f1 .text:0007
01:74f8 data_groove_screen_title_string
01:74f8 .text:0008

01:7500 call_01_7500

01:75c6 call_01_75c6

01:75d0 data_out_of_memory_error_string
01:75d0 .text:0031

01:7601 call_01_7601

01:760b data_add_chain_error_string
01:760b .text:0014

01:761f call_01_761f

01:7629 data_add_phrase_error_string
01:7629 .text:0015

01:763e call_01_763e

01:7648 data_max_marks_error_string
01:7648 .text:000d

01:7655 call_01_7655

01:7777 data_01_7777
;; 01:7777 Assumed to be jump table
01:7777 .data:0028

01:779f data_s_command_help_strings
01:779f data_s_kit_command_help_string
01:779f .text:0049
01:77e8 data_s_noise_command_help_string
01:77e8 .text:002e
01:7816 data_s_puse_command_help_string
01:7816 .text:0012

01:7828 call_01_7828

01:7869 call_01_7869

01:7881 call_01_7881

01:7954 jump_01_7954

01:7b88 data_crash_help_strings
01:7b88 data_crash_help_title_string
01:7b88 .text:000c
01:7b94 data_crash_help_1_string
01:7b94 .text:0011
01:7ba5 data_crash_help_2_string
01:7ba5 .text:0010
01:7bb5 data_crash_help_3_string
01:7bb5 .text:0012
01:7bc7 data_crash_help_rom_string
01:7bc7 .text:0005
01:7bcc data_crash_help_stk_string
01:7bcc .text:0005
01:7bd1 data_crash_help_ply_string
01:7bd1 .text:0005
01:7bd6 data_crash_help_cvw_string
01:7bd6 .text:0005
01:7bdb data_crash_help_cgb_string
01:7bdb .text:0004
01:7bdf data_crash_help_gba_string
01:7bdf .text:0004
01:7be3 data_crash_help_syn_string
01:7be3 .text:0005
01:7be8 data_crash_help_ast_string
01:7be8 .text:0004

01:7c94 call_01_7c94

;; 01:7cfe:r_op LOW(call_1e_7aa0)
;; 01:7d00:r_op HIGH(call_1e_7aa0)
;; 01:7d03:r_op BANK(call_1e_7aa0)

;; 01:7da2:r_op LOW(call_07_5d9a)
;; 01:7da4:r_op HIGH(call_07_5d9a)
;; 01:7da7:r_op BANK(call_07_5d9a)

;; 01:7dc0:r_op LOW(call_1c_4a46)
;; 01:7dc2:r_op HIGH(call_1c_4a46)
;; 01:7dc5:r_op BANK(call_1c_4a46)

;; 01:7dce:r_op LOW(call_1c_6f75)
;; 01:7dd0:r_op HIGH(call_1c_6f75)
;; 01:7dd3:r_op BANK(call_1c_6f75)

;; 01:7de5:r_op LOW(call_07_6505)
;; 01:7de7:r_op HIGH(call_07_6505)
;; 01:7dea:r_op BANK(call_07_6505)

01:7ee1 _set_sprite_palette
;; 01:7ee1 gbdk 2.95 libc/gb/cgb.s:_set_sprite_palette
;; 01:7ee1 See: _set_bkg_palette
01:7ef7 .set_sprite_palette_1

01:7f0c data_bank_01_padding
;; 01:7f0c 01:7f0c
;; 01:7f0c:replace:00f4 ds $8000 - @, $ff

02:4679 call_02_4679

02:5534 call_02_5534

02:5f28 call_02_5f28

02:6171 call_02_6171

02:6465 call_02_6465

02:65bb call_02_65bb

02:6631 call_02_6631

;; 02:663d:r_op LOW(call_07_5d9a)
;; 02:663f:r_op HIGH(call_07_5d9a)
;; 02:6642:r_op BANK(call_07_5d9a)

02:6d31 call_02_6d31

02:6d46 call_02_6d46

02:6e87 call_02_6e87

02:701d call_02_701d

02:7030 call_02_7030

02:77e6 call_02_77e6

02:7b9b call_02_7b9b

02:7eb9 data_bank_02_padding
;; 02:7eb9 02:7eb9
;; 02:7eb9:replace:0147 ds $8000 - @, $ff

03:4015 data_03_4015
;; 03:4015 Possibly instrument label data
03:4015 .data:00e3

;; 03:4266:r_op LOW(call_01_522d)
;; 03:4268:r_op HIGH(call_01_522d)
;; 03:4270:r_op BANK(call_01_522d)

;; 03:432a:r_op call_01_7500
;; 03:432e:r_op BANK(call_01_7500)

03:433b data_out_of_synths_error_string
03:433b .text:0032

;; 03:436e:r_op LOW(call_1f_4b8c)
;; 03:4370:r_op HIGH(call_1f_4b8c)
;; 03:4373:r_op BANK(call_1f_4b8c)

03:43da data_out_of_tables_instrument_screen_error_string
03:43da .text:000f

;; 03:43ca:r_op LOW(call_1f_409c)
;; 03:43cc:r_op HIGH(call_1f_409c)
;; 03:43cf:r_op BANK(call_1f_409c)

03:45c3 data_cloned_synth_string
03:45c3 .text:000d

03:45d0 call_03_45d0

;; 03:45d9:r_op call_05_4040
;; 03:45dd:r_op BANK(call_05_4040)

;; 03:45e6:r_op LOW(call_01_6d5c)
;; 03:45e8:r_op HIGH(call_01_6d5c)
;; 03:45eb:r_op BANK(call_01_6d5c)

03:45fc call_03_45fc

;; 03:4631:r_op LOW(call_01_6cef)
;; 03:4633:r_op HIGH(call_01_6cef)
;; 03:4636:r_op BANK(call_01_6cef)

03:4644 call_03_4644

;; 03:468f:r_op LOW(call_01_6cef)
;; 03:4691:r_op HIGH(call_01_6cef)
;; 03:4694:r_op BANK(call_01_6cef)

03:47b9 call_03_47b9

;; 03:4825:r_op LOW(call_1f_4000)
;; 03:4827:r_op HIGH(call_1f_4000)
;; 03:482a:r_op BANK(call_1f_4000)

;; 03:4847:r_op LOW(call_1f_409c)
;; 03:4849:r_op HIGH(call_1f_409c)
;; 03:484c:r_op BANK(call_1f_409c)

;; 03:4894:r_op LOW(call_1f_4000)
;; 03:4896:r_op HIGH(call_1f_4000)
;; 03:4899:r_op BANK(call_1f_4000)

;; 03:48b6:r_op LOW(call_1f_409c)
;; 03:48b8:r_op HIGH(call_1f_409c)
;; 03:48bb:r_op BANK(call_1f_409c)

;; 03:48ef:r_op LOW(call_1f_409c)
;; 03:48f1:r_op HIGH(call_1f_409c)
;; 03:48f4:r_op BANK(call_1f_409c)

;; 03:493d:r_op LOW(call_1f_409c)
;; 03:493f:r_op HIGH(call_1f_409c)
;; 03:4942:r_op BANK(call_1f_409c)

;; 03:4975:r_op LOW(call_1f_409c)
;; 03:4977:r_op HIGH(call_1f_409c)
;; 03:497a:r_op BANK(call_1f_409c)

;; 03:49a4:r_op LOW(call_1f_409c)
;; 03:49a6:r_op HIGH(call_1f_409c)
;; 03:49a9:r_op BANK(call_1f_409c)

03:49b4 call_03_49b4

03:49e0 call_03_49e0

03:4a26 call_03_4a26

03:4a63 call_03_4a63

;; 03:4bad:r_op LOW(call_01_5208)
;; 03:4baf:r_op HIGH(call_01_5208)

;; 03:4bb4:r_op LOW(call_01_518c)
;; 03:4bb6:r_op HIGH(call_01_518c)

;; 03:4bc0 Assume the bank of call_01_518c is the same as call_01_5208
;; 03:4bc0:r_op BANK(call_01_5208)
;; 03:4bc4 Call either call_01_518c or call_01_5208

;; 03:4c6a:r_op LOW(call_01_518c)
;; 03:4c6c:r_op HIGH(call_01_518c)
;; 03:4c76:r_op BANK(call_01_518c)

;; 03:4cdf:r_op LOW(call_01_518c)
;; 03:4ce1:r_op HIGH(call_01_518c)
;; 03:4ceb:r_op BANK(call_01_518c)

03:4cf8 call_03_4cf8

03:4d34 call_03_4d34

03:4dea data_wave_instrument_screen_string
03:4dea .text:0006
03:4df0 data_synth_instrument_screen_string
03:4df0 .text:0006

;; 03:4df7:r_op call_1b_754f
;; 03:4dfb:r_op BANK(call_1b_754f)

;; 03:4e1f:r_op LOW(call_1f_7087)
;; 03:4e21:r_op HIGH(call_1f_7087)
;; 03:4e24:r_op BANK(call_1f_7087)

;; 03:4e36:r_op call_1f_4929
;; 03:4e3a:r_op BANK(call_1f_4929)

;; 03:4ecd:r_op LOW(call_01_493b)
;; 03:4ecf:r_op HIGH(call_01_493b)
;; 03:4ed8:r_op BANK(call_01_493b)

03:4e06 call_03_4e06

;; 03:4f9a:r_op LOW(call_1f_6ff1)
;; 03:4f9c:r_op HIGH(call_1f_6ff1)
;; 03:4f9f:r_op BANK(call_1f_6ff1)

03:4fe3 data_instrument_type_strings
03:4fe3 data_pulse_instrument_type_string
03:4fe3 .text:0006
03:4fe9 data_wave_instrument_type_string
03:4fe9 .text:0006
03:4fef data_kit_instrument_type_string
03:4fef .text:0006
03:4ff5 data_noise_instrument_type_string
03:4ff5 .text:0006

;; 03:517e:r_op LOW(call_01_6cef)
;; 03:5180:r_op HIGH(call_01_6cef)
;; 03:5185:r_op BANK(call_01_6cef)

;; 03:51c6:r_op call_1f_418a
;; 03:51ca:r_op BANK(call_1f_418a)

;; 03:51fe:r_op call_1f_418a
;; 03:5202:r_op BANK(call_1f_418a)

;; 03:523b:r_op call_1f_418a
;; 03:523f:r_op BANK(call_1f_418a)

;; 03:5275:r_op call_1f_418a
;; 03:5279:r_op BANK(call_1f_418a)

03:53fd call_03_53fd

;; 03:5409:r_op LOW(call_1f_71cc)
;; 03:540b:r_op HIGH(call_1f_71cc)
;; 03:540e:r_op BANK(call_1f_71cc)

;; 03:582e:r_op call_1f_4157
;; 03:5832:r_op BANK(call_1f_4157)

;; 03:5848:r_op call_1f_4169
;; 03:584c:r_op BANK(call_1f_4169)

;; 03:58c7:r_op call_1f_4157
;; 03:58cb:r_op BANK(call_1f_4157)

;; 03:58e1:r_op call_1f_4169
;; 03:58e5:r_op BANK(call_1f_4169)

;; 03:76ea:r_op LOW(call_1b_4e8a)
;; 03:76ec:r_op HIGH(call_1b_4e8a)
;; 03:76ef:r_op BANK(call_1b_4e8a)

;; 03:7798:r_op call_05_6936
;; 03:77a1:r_op BANK(call_05_6936)

;; 03:7833:r_op call_1f_4000
;; 03:7837:r_op BANK(call_1f_4000)

;; 03:7854:r_op call_1f_409c
;; 03:7858:r_op BANK(call_1f_409c)

;; 03:78c0:r_op call_05_426a
;; 03:78c4:r_op BANK(call_05_426a)

;; 03:78e6:r_op call_05_4287
;; 03:78ea:r_op BANK(call_05_4287)

;; 03:790c:r_op call_05_4233
;; 03:7910:r_op BANK(call_05_4233)

;; 03:7934:r_op call_05_4253
;; 03:7938:r_op BANK(call_05_4253)

;; 03:79ac:r_op LOW(call_01_546e)
;; 03:79ae:r_op HIGH(call_01_546e)
;; 03:79b1:r_op BANK(call_01_546e)

;; 03:79bd:r_op LOW(call_01_551b)
;; 03:79bf:r_op HIGH(call_01_551b)
;; 03:79c2:r_op BANK(call_01_551b)

;; 03:79e0:r_op LOW(call_02_77e6)
;; 03:79e2:r_op HIGH(call_02_77e6)
;; 03:79e5:r_op BANK(call_02_77e6)

;; 03:7a08:r_op LOW(call_02_7b9b)
;; 03:7a0a:r_op HIGH(call_02_7b9b)
;; 03:7a0d:r_op BANK(call_02_7b9b)

;; 03:7a1b:r_op LOW(call_01_5253)
;; 03:7a1d:r_op HIGH(call_01_5253)
;; 03:7a20:r_op BANK(call_01_5253)

03:7a39 data_instrument_param_strings
03:7a39 data_loop_on_left_instrument_param_string
03:7a39 .text:0004
03:7a3d data_loop_atk_left_instrument_param_string
03:7a3d .text:0004
03:7a41 data_loop_on_right_instrument_param_string
03:7a41 .text:0004
03:7a45 data_loop_atk_right_instrument_param_string
03:7a45 .text:0004
03:7a49 data_full_kit_speed_instrument_param_string
03:7a49 .text:0004
03:7a4d data_safe_noise_type_instrument_param_string
03:7a4d .text:0005
03:7a52 data_03_7a52
03:7a52 .text:0004
03:7a56 data_loop_off_left_instrument_param_string
03:7a56 .text:0004
03:7a5a data_03_7a5a
03:7a5a .text:0004
03:7a5e data_loop_off_right_instrument_param_string
03:7a5e .text:0004
03:7a62 data_len_all_left_instrument_param_string
03:7a62 .text:0004
03:7a66 data_half_kit_speed_instrument_param_string
03:7a66 .text:0004
03:7a6a data_free_noise_type_instrument_param_string
03:7a6a .text:0005
03:7a6f data_len_all_right_instrument_param_string
03:7a6f .text:0004

03:7a73 data_bank_03_padding
;; 03:7a73 03:7a73
;; 03:7a73:replace:058d ds $8000 - @, $ff

04:4000 call_04_4000

;; 04:4001:r_op call_06_752b
;; 04:4010:r_op BANK(call_06_752b)

;; 04:401c:r_op LOW(call_1f_6bac)
;; 04:401e:r_op HIGH(call_1f_6bac)
;; 04:4021:r_op BANK(call_1f_6bac)

04:41f0 call_04_41f0

;; 04:42d0:r_op LOW(call_1f_4a64)
;; 04:42d2:r_op HIGH(call_1f_4a64)
;; 04:42d7:r_op BANK(call_1f_4a64)

;; 04:4362:r_op LOW(call_01_493b)
;; 04:4364:r_op HIGH(call_01_493b)
;; 04:436c:r_op BANK(call_01_493b)

;; 04:43ac:r_op LOW(call_01_7828)
;; 04:43ae:r_op HIGH(call_01_7828)
;; 04:43b1:r_op BANK(call_01_7828)

04:49c5 call_04_49c5

;; 04:4c9a:r_op LOW(call_1f_6cd7)
;; 04:4c9c:r_op HIGH(call_1f_6cd7)
;; 04:4c9f:r_op BANK(call_1f_6cd7)

04:4caa call_04_4caa

04:4ce5 call_04_4ce5

;; 04:4d0a:r_op LOW(call_01_6d5c)
;; 04:4d0c:r_op HIGH(call_01_6d5c)
;; 04:4d0f:r_op BANK(call_01_6d5c)

;; 04:4d18:r_op call_06_55d0
;; 04:4d1c:r_op BANK(call_06_55d0)

;; 04:4f92:r_op LOW(call_1f_6bc2)
;; 04:4f94:r_op HIGH(call_1f_6bc2)
;; 04:4f9a:r_op BANK(call_1f_6bc2)

;; 04:50b8:r_op LOW(call_1f_6ff1)
;; 04:50ba:r_op HIGH(call_1f_6ff1)
;; 04:50bd:r_op BANK(call_1f_6ff1)

;; 04:50c6:r_op LOW(call_1e_4000)
;; 04:50c8:r_op HIGH(call_1e_4000)
;; 04:50cb:r_op BANK(call_1e_4000)

;; 04:54bd:r_op LOW(call_01_493b)
;; 04:54bf:r_op HIGH(call_01_493b)
;; 04:54c7:r_op BANK(call_01_493b)

;; 04:54d0:r_op LOW(call_01_4a49)
;; 04:54d2:r_op HIGH(call_01_4a49)
;; 04:54da:r_op BANK(call_01_4a49)

;; 04:5550:r_op LOW(call_1f_4a64)
;; 04:5552:r_op HIGH(call_1f_4a64)
;; 04:5557:r_op BANK(call_1f_4a64)

;; 04:5577:r_op call_05_73f6
;; 04:557b:r_op BANK(call_05_73f6)

;; 04:55c9:r_op LOW(call_1f_4b8c)
;; 04:55cb:r_op HIGH(call_1f_4b8c)
;; 04:55d0:r_op BANK(call_1f_4b8c)

;; 04:55e5:r_op LOW(call_01_5331)
;; 04:55e7:r_op HIGH(call_01_5331)
;; 04:55f5:r_op BANK(call_01_5331)

;; 04:55fe:r_op call_05_73f6
;; 04:5602:r_op BANK(call_05_73f6)

04:56ce data_cloned_instrument_string
04:56ce .text:000d
04:56db data_cloned_phrase_table_string
04:56db .text:000d

;; 04:576c:r_op LOW(call_02_7b9b)
;; 04:576e:r_op HIGH(call_02_7b9b)
;; 04:5771:r_op BANK(call_02_7b9b)

;; 04:5783:r_op LOW(call_01_493b)
;; 04:5785:r_op HIGH(call_01_493b)
;; 04:578f:r_op BANK(call_01_493b)

;; 04:57cf:r_op LOW(call_01_7828)
;; 04:57d1:r_op HIGH(call_01_7828)
;; 04:57d4:r_op BANK(call_01_7828)

;; 04:5bc8:r_op call_05_73f6
;; 04:5bcc:r_op BANK(call_05_73f6)

04:5b4e call_04_5b4e

;; 04:5dd9:r_op LOW(call_1f_4a64)
;; 04:5ddb:r_op HIGH(call_1f_4a64)
;; 04:5de0:r_op BANK(call_1f_4a64)

;; 04:5e59:r_op LOW(call_01_7655)
;; 04:5e5b:r_op HIGH(call_01_7655)
;; 04:5e63:r_op BANK(call_01_7655)

;; 04:5ecb:r_op LOW(call_1f_6e7d)
;; 04:5ecd:r_op HIGH(call_1f_6e7d)
;; 04:5ed0:r_op BANK(call_1f_6e7d)

;; 04:5f0f:r_op LOW(call_1f_6e7d)
;; 04:5f11:r_op HIGH(call_1f_6e7d)
;; 04:5f14:r_op BANK(call_1f_6e7d)

;; 04:5f82:r_op LOW(call_1f_6e7d)
;; 04:5f84:r_op HIGH(call_1f_6e7d)
;; 04:5f87:r_op BANK(call_1f_6e7d)

;; 04:5fca:r_op LOW(call_02_6e87)
;; 04:5fcc:r_op HIGH(call_02_6e87)
;; 04:5fdd:r_op BANK(call_02_6e87)

;; 04:6048:r_op LOW(call_1f_6e7d)
;; 04:604a:r_op HIGH(call_1f_6e7d)
;; 04:604d:r_op BANK(call_1f_6e7d)

;; 04:6095:r_op LOW(call_02_6e87)
;; 04:6097:r_op HIGH(call_02_6e87)
;; 04:60a4:r_op BANK(call_02_6e87)

;; 04:6237:r_op LOW(call_1f_6bc2)
;; 04:6239:r_op HIGH(call_1f_6bc2)
;; 04:623f:r_op BANK(call_1f_6bc2)

;; 04:63ed:r_op LOW(call_01_7655)
;; 04:63ef:r_op HIGH(call_01_7655)
;; 04:63f7:r_op BANK(call_01_7655)

;; 04:6663:r_op LOW(call_1f_6bc2)
;; 04:6665:r_op HIGH(call_1f_6bc2)
;; 04:666f:r_op BANK(call_1f_6bc2)

;; 04:6820:r_op LOW(call_01_7655)
;; 04:6822:r_op HIGH(call_01_7655)
;; 04:682a:r_op BANK(call_01_7655)

;; 04:6b0e:r_op LOW(call_1f_6bc2)
;; 04:6b10:r_op HIGH(call_1f_6bc2)
;; 04:6b16:r_op BANK(call_1f_6bc2)

;; 04:6cf9:r_op LOW(call_01_7655)
;; 04:6cfb:r_op HIGH(call_01_7655)
;; 04:6d03:r_op BANK(call_01_7655)

;; 04:6fd4:r_op LOW(call_1f_6bc2)
;; 04:6fd6:r_op HIGH(call_1f_6bc2)
;; 04:6fde:r_op BANK(call_1f_6bc2)

;; 04:71c2:r_op LOW(call_01_7655)
;; 04:71c4:r_op HIGH(call_01_7655)
;; 04:71cc:r_op BANK(call_01_7655)

;; 04:731b:r_op LOW(call_1f_65f1)
;; 04:731d:r_op HIGH(call_1f_65f1)
;; 04:7320:r_op BANK(call_1f_65f1)

;; 04:7344:r_op LOW(call_1f_6612)
;; 04:7346:r_op HIGH(call_1f_6612)
;; 04:7349:r_op BANK(call_1f_6612)

;; 04:7388:r_op LOW(call_02_6e87)
;; 04:738a:r_op HIGH(call_02_6e87)
;; 04:7398:r_op BANK(call_02_6e87)

;; 04:7407:r_op LOW(call_02_6e87)
;; 04:7409:r_op HIGH(call_02_6e87)
;; 04:7416:r_op BANK(call_02_6e87)

;; 04:777e:r_op LOW(call_1f_6633)
;; 04:7780:r_op HIGH(call_1f_6633)
;; 04:7789:r_op BANK(call_1f_6633)

;; 04:77f8:r_op LOW(call_1f_6e7d)
;; 04:77fa:r_op HIGH(call_1f_6e7d)
;; 04:77fd:r_op BANK(call_1f_6e7d)

;; 04:7827:r_op LOW(call_02_77e6)
;; 04:7829:r_op HIGH(call_02_77e6)
;; 04:782c:r_op BANK(call_02_77e6)

;; 04:7866:r_op LOW(call_02_7b9b)
;; 04:7868:r_op HIGH(call_02_7b9b)
;; 04:786b:r_op BANK(call_02_7b9b)

;; 04:788f:r_op call_05_4233
;; 04:7893:r_op BANK(call_05_4233)

;; 04:7902:r_op call_05_4287
;; 04:7906:r_op BANK(call_05_4287)

;; 04:7938:r_op call_05_426a
;; 04:793c:r_op BANK(call_05_426a)

;; 04:79fd:r_op call_05_4253
;; 04:7a01:r_op BANK(call_05_4253)

;; 04:7a0a:r_op call_05_4253
;; 04:7a0e:r_op BANK(call_05_4253)

;; 04:7a33:r_op call_05_4253
;; 04:7a37:r_op BANK(call_05_4253)

;; 04:7a70:r_op LOW(call_1f_6633)
;; 04:7a72:r_op HIGH(call_1f_6633)
;; 04:7a79:r_op BANK(call_1f_6633)

;; 04:7b4e:r_op LOW(call_1f_6633)
;; 04:7b50:r_op HIGH(call_1f_6633)
;; 04:7b57:r_op BANK(call_1f_6633)

;; 04:7b65:r_op call_05_73b8
;; 04:7b69:r_op BANK(call_05_73b8)

04:7b9b data_phrase_screen_cancel_select_string
04:7b9b .text:000e
04:7ba9 data_phrase_screen_select_string
04:7ba9 .text:0007

04:7bb0 data_bank_04_padding
;; 04:7bb0 04:7bb0
;; 04:7bb0:replace:0450 ds $8000 - @, $ff

05:4040 call_05_4040

05:4233 call_05_4233

05:4253 call_05_4253

05:426a call_05_426a

05:4287 call_05_4287

05:43b7 call_05_43b7

05:4762 call_05_4762

;; 05:47b3:r_op LOW(call_01_6d5c)
;; 05:47b5:r_op HIGH(call_01_6d5c)
;; 05:47b8:r_op BANK(call_01_6d5c)

;; 05:4912:r_op LOW(call_1f_6ff1)
;; 05:4914:r_op HIGH(call_1f_6ff1)
;; 05:4917:r_op BANK(call_1f_6ff1)

05:4967 call_05_4967

05:4b5d call_05_4b5d

;; 05:4c39:r_op LOW(call_01_6cef)
;; 05:4c3b:r_op HIGH(call_01_6cef)
;; 05:4c3e:r_op BANK(call_01_6cef)

;; 05:4d92:r_op LOW(call_01_7655)
;; 05:4d94:r_op HIGH(call_01_7655)
;; 05:4d9e:r_op BANK(call_01_7655)

;; 05:5088:r_op LOW(call_01_7655)
;; 05:508a:r_op HIGH(call_01_7655)
;; 05:5092:r_op BANK(call_01_7655)

;; 05:53b6:r_op LOW(call_01_7655)
;; 05:53b8:r_op HIGH(call_01_7655)
;; 05:53c0:r_op BANK(call_01_7655)

;; 05:56d8:r_op LOW(call_01_7655)
;; 05:56da:r_op HIGH(call_01_7655)
;; 05:56e2:r_op BANK(call_01_7655)

;; 05:5a30:r_op LOW(call_01_7655)
;; 05:5a32:r_op HIGH(call_01_7655)
;; 05:5a3a:r_op BANK(call_01_7655)

;; 05:5e26:r_op LOW(call_02_77e6)
;; 05:5e28:r_op HIGH(call_02_77e6)
;; 05:5e2b:r_op BANK(call_02_77e6)

;; 05:5e4e:r_op LOW(call_02_7b9b)
;; 05:5e50:r_op HIGH(call_02_7b9b)
;; 05:5e53:r_op BANK(call_02_7b9b)

05:612e data_table_screen_cancel_select_string
05:612e .text:000e
05:613c data_table_screen_select_string
05:613c .text:0007

;; 05:63fe:r_op LOW(call_1c_717c)
;; 05:6400:r_op HIGH(call_1c_717c)
;; 05:6403:r_op BANK(call_1c_717c)

05:6413 data_table_screen_cut_string
05:6413 .text:0004
05:6417 data_table_screen_copy_string
05:6417 .text:0005

05:6936 call_05_6936

05:6c9e data_instrument_help_strings
05:6c9e data_envelope_stage_1_instrument_help_string
05:6c9e .text:004d
05:6ceb data_envelope_stage_2_instrument_help_string
05:6ceb .text:004d
05:6d38 data_envelope_stage_3_instrument_help_string
05:6d38 .text:004d
05:6d85 data_pan_instrument_help_string
05:6d85 .text:0015
05:6d9a data_length_instrument_help_string
05:6d9a .text:0014
05:6dae data_pitch_instrument_help_string
05:6dae .text:0080
05:6e2e data_transpose_instrument_help_string
05:6e2e .text:0012
05:6e40 data_command_rate_instrument_help_string
05:6e40 .text:002a
05:6e6a data_table_rate_instrument_help_string
05:6e6a .text:0030
05:6e9a data_amplitude_instrument_help_string
05:6e9a .text:0017
05:6eb1 data_type_instrument_help_string
05:6eb1 .text:0034
05:6ee5 data_pulse_width_instrument_help_string
05:6ee5 .text:0019
05:6efe data_sweep_instrument_help_string
05:6efe .text:0034
05:6f32 data_transpose_pulse2_instrument_help_string
05:6f32 .text:0012
05:6f44 data_finetune_instrument_help_string
05:6f44 .text:0019
05:6f5d data_synth_finetune_instrument_help_string
05:6f5d .text:000f
05:6f6c data_synth_manual_wave_instrument_help_string
05:6f6c .text:000d
05:6f79 data_synth_num_instrument_help_string
05:6f79 .text:0023
05:6f9c data_synth_type_instrument_help_string
05:6f9c .text:0092
05:702e data_synth_speed_instrument_help_string
05:702e .text:000b
05:7039 data_synth_length_instrument_help_string
05:7039 .text:0010
05:7049 data_synth_loop_pos_instrument_help_string
05:7049 .text:0013
05:705c data_kit_num_left_instrument_help_string
05:705c .text:0012
05:706e data_kit_num_right_instrument_help_string
05:706e .text:0013
05:7081 data_kit_finetune_instrument_help_string
05:7081 .text:000c
05:708d data_kit_offset_instrument_help_string
05:708d .text:001a
05:70a7 data_kit_length_instrument_help_string
05:70a7 .text:001b
05:70c2 data_kit_loop_instrument_help_string
05:70c2 .text:0046
05:7108 data_wave_speed_instrument_help_string
05:7108 .text:0010
05:7118 data_kit_clip_instrument_help_string
05:7118 .text:002f
05:7147 data_noise_pitch_type_instrument_help_string
05:7147 .text:0026
05:716d data_vibrato_instrument_help_string
05:716d .text:0014

05:7181 call_05_7181

05:721c data_synth_help_strings
05:721c data_signal_synth_help_string
05:721c .text:0036
05:7252 data_filter_synth_help_string
05:7252 .text:002b
05:727d data_distortion_synth_help_string
05:727d .text:005d
05:72da data_phase_synth_help_string
05:72da .text:001b
05:72f5 data_volume_synth_help_string
05:72f5 .text:000e
05:7303 data_cutoff_synth_help_string
05:7303 .text:0018
05:731b data_q_synth_help_string
05:731b .text:0039
05:7354 data_vshift_synth_help_string
05:7354 .text:000f
05:7363 data_limit_synth_help_string
05:7363 .text:0055

05:73b8 call_05_73b8

05:73f6 call_05_73f6

05:7427 data_bank_05_padding
;; 05:7427 05:7427
;; 05:7427:replace:0bd9 ds $8000 - @, $ff

06:41a2 call_06_41a2

;; 06:41a5:r_op LOW(call_01_6d5c)
;; 06:41a7:r_op HIGH(call_01_6d5c)
;; 06:41aa:r_op BANK(call_01_6d5c)

;; 06:4222:r_op LOW(call_1f_6ff1)
;; 06:4224:r_op HIGH(call_1f_6ff1)
;; 06:4227:r_op BANK(call_1f_6ff1)

06:42fb data_text_to_speech_screen_strings
06:42fb data_text_to_speech_word_string
06:42fb .text:006
06:4301 data_text_to_speech_empty_string
06:4301 .text:005

06:431d call_06_431d

;; 06:47ed:r_op call_05_4233
;; 06:47f1:r_op BANK(call_05_4233)

;; 06:4815:r_op call_05_426a
;; 06:4819:r_op BANK(call_05_426a)

;; 06:483d:r_op call_05_4287
;; 06:4841:r_op BANK(call_05_4287)

;; 06:486a:r_op LOW(call_02_77e6)
;; 06:486c:r_op HIGH(call_02_77e6)
;; 06:486f:r_op BANK(call_02_77e6)

;; 06:4892:r_op LOW(call_02_7b9b)
;; 06:4894:r_op HIGH(call_02_7b9b)
;; 06:4897:r_op BANK(call_02_7b9b)

06:4ec2 call_06_4ec2

;; 06:4ece:r_op LOW(call_01_6d5c)
;; 06:4ed0:r_op HIGH(call_01_6d5c)
;; 06:4eca:r_op BANK(call_01_6d5c)

;; 06:4edd:r_op call_05_4040
;; 06:4ee1:r_op BANK(call_05_4040)

06:5029 call_06_5029

;; 06:50a6:r_op call_05_73f6
;; 06:50aa:r_op BANK(call_05_73f6)

;; 06:51c8:r_op LOW(call_02_77e6)
;; 06:51ca:r_op HIGH(call_02_77e6)
;; 06:51cd:r_op BANK(call_02_77e6)

;; 06:51f0:r_op LOW(call_02_7b9b)
;; 06:51f2:r_op HIGH(call_02_7b9b)
;; 06:51f5:r_op BANK(call_02_7b9b)

;; 06:5225:r_op call_05_4233
;; 06:5229:r_op BANK(call_05_4233)

;; 06:5252:r_op call_05_4287
;; 06:5256:r_op BANK(call_05_4287)

;; 06:529a:r_op call_05_73b8
;; 06:529e:r_op BANK(call_05_73b8)

06:532d data_wave_screen_cancel_select_string
06:532d .text:000e
06:533b data_wave_screen_select_string
06:533b .text:0007

;; 06:53ff:r_op LOW(call_1c_717c)
;; 06:5401:r_op HIGH(call_1c_717c)
;; 06:5404:r_op BANK(call_1c_717c)

06:5411 data_wave_screen_copy_string
06:5411 .text:0005

;; 06:54c5:r_op LOW(call_02_6e87)
;; 06:54c7:r_op HIGH(call_02_6e87)
;; 06:54d7:r_op BANK(call_02_6e87)

06:55d0 call_06_55d0

06:55ff call_06_55ff

06:5654 call_06_5654

06:569a call_06_569a

06:583a data_cloned_phrase_string
06:583a .text:000e

06:58e8 call_06_58e8

;; 06:590d:r_op LOW(call_01_6d5c)
;; 06:590f:r_op HIGH(call_01_6d5c)
;; 06:5912:r_op BANK(call_01_6d5c)

;; 06:59ed:r_op LOW(call_1f_6ff1)
;; 06:59ef:r_op HIGH(call_1f_6ff1)
;; 06:59f2:r_op BANK(call_1f_6ff1)

06:5a03 call_06_5a03

06:5aa1 call_06_5aa1

;; 06:5af6:r_op call_05_73f6
;; 06:5afa:r_op BANK(call_05_73f6)

;; 06:5b0b:r_op call_01_6cef
;; 06:5b0f:r_op BANK(call_01_6cef)

;; 06:5b18:r_op call_05_4040
;; 06:5b1c:r_op BANK(call_05_4040)

;; 06:5bad:r_op LOW(call_01_4eb3)
;; 06:5baf:r_op HIGH(call_01_4eb3)
;; 06:5bb2:r_op BANK(call_01_4eb3)

;; 06:5bc6:r_op LOW(call_02_6e87)
;; 06:5bc8:r_op HIGH(call_02_6e87)
;; 06:5bd9:r_op BANK(call_02_6e87)

;; 06:5c0f:r_op LOW(call_01_4eb3)
;; 06:5c11:r_op HIGH(call_01_4eb3)
;; 06:5c14:r_op BANK(call_01_4eb3)

;; 06:5c28:r_op LOW(call_01_4cfb)
;; 06:5c2a:r_op HIGH(call_01_4cfb)
;; 06:5c32:r_op BANK(call_01_4cfb)

;; 06:5c43:r_op LOW(call_1f_48c4)
;; 06:5c45:r_op HIGH(call_1f_48c4)
;; 06:5c5b:r_op BANK(call_1f_48c4)

;; 06:67c8:r_op LOW(call_02_6e87)
;; 06:67ca:r_op HIGH(call_02_6e87)
;; 06:67db:r_op BANK(call_02_6e87)

;; 06:6841:r_op LOW(call_1f_48c4)
;; 06:6843:r_op HIGH(call_1f_48c4)
;; 06:6858:r_op BANK(call_1f_48c4)

;; 06:68ec:r_op LOW(call_02_6e87)
;; 06:68ee:r_op HIGH(call_02_6e87)
;; 06:68ff:r_op BANK(call_02_6e87)

;; 06:690b:r_op call_05_73f6
;; 06:690f:r_op BANK(call_05_73f6)

;; 06:6925:r_op LOW(call_01_4eb3)
;; 06:6927:r_op HIGH(call_01_4eb3)
;; 06:692c:r_op BANK(call_01_4eb3)

;; 06:694d:r_op LOW(call_1f_48c4)
;; 06:694f:r_op HIGH(call_1f_48c4)
;; 06:6965:r_op BANK(call_1f_48c4)

;; 06:6999:r_op LOW(call_01_75c6)
;; 06:699b:r_op HIGH(call_01_75c6)
;; 06:699e:r_op BANK(call_01_75c6)

;; 06:69d0:r_op LOW(call_02_77e6)
;; 06:69d2:r_op HIGH(call_02_77e6)
;; 06:69d5:r_op BANK(call_02_77e6)

;; 06:6a67:r_op LOW(call_02_7b9b)
;; 06:6a69:r_op HIGH(call_02_7b9b)
;; 06:6a6c:r_op BANK(call_02_7b9b)

;; 06:6a99:r_op LOW(call_01_761f)
;; 06:6a9b:r_op HIGH(call_01_761f)
;; 06:6a9e:r_op BANK(call_01_761f)

;; 06:6aac:r_op call_05_4253
;; 06:6ab0:r_op BANK(call_05_4253)

;; 06:6ae2:r_op call_05_4233
;; 06:6ae6:r_op BANK(call_05_4233)

;; 06:6b1b:r_op call_05_426a
;; 06:6b1f:r_op BANK(call_05_426a)

;; 06:6b51:r_op call_05_4287
;; 06:6b55:r_op BANK(call_05_4287)

;; 06:6c76:r_op call_05_73b8
;; 06:6c7a:r_op BANK(call_05_73b8)

;; 06:6e35:r_op LOW(call_1c_717c)
;; 06:6e37:r_op HIGH(call_1c_717c)
;; 06:6e3a:r_op BANK(call_1c_717c)

06:6cb1 data_chain_screen_cancel_select_string
06:6cb1 .text:000e
06:6cbf data_chain_screen_select_string
06:6cbf .text:0007

06:6e74 data_chain_screen_cut_string
06:6e74 .text:0005
06:6e79 data_chain_screen_copy_string
06:6e79 .text:0005

06:6f71 data_chain_screen_paste_string
06:6f71 .text:0006

06:7235 call_06_7235

06:73c6 data_sync_strings_1
06:73c6 data_wait_sync_string_1
06:73c6 .text:0005
06:73cb data_lead_sync_string_1
06:73cb .text:0005
06:73d0 data_sync_string_1
06:73d0 .text:0005
06:73d5 data_empty_sync_string_1
06:73d5 .text:0005

06:740f data_sync_strings_2
06:740f data_sync_string_2
06:740f .text:005
06:7414 data_wait_sync_string_2
06:7414 .text:005
06:7419 data_empty_sync_string_2
06:7419 .text:005

06:7481 data_sync_strings_3
06:7481 data_sync_string_3
06:7481 .text:005
06:7486 data_empty_sync_string_3
06:7486 .text:005
06:748b data_lead_sync_string_2
06:748b .text:005
06:7490 data_empty_sync_string_4
06:7490 .text:005

06:752b call_06_752b

06:7655 data_notes_string
06:7655 .text:0005
06:765a .text:0024
06:767e .text:0024
06:76a2 .text:0024
06:76c6 .text:0024
06:76ea .text:0024
06:770e .text:0024
06:7732 .text:0024
06:7756 .text:0024
06:777a .text:0023

06:779d data_note_strings
06:779d data_empty_note_string
06:779d .text:0004
06:77a1 data_c5_note_string
06:77a1 .text:0004
06:77a5 data_f5_note_string
06:77a5 .text:0004
06:77a9 data_c6_note_string
06:77a9 .text:0004
06:77ad data_c7_note_string
06:77ad .text:0004
06:77b1 data_c8_note_string
06:77b1 .text:0004
06:77b5 data_invalid_note_string_1
06:77b5 .text:0004
06:77b9 data_invalid_note_string_2
06:77b9 .text:0004

;; 07:413c:r_op call_05_73f6
;; 07:4140:r_op BANK(call_05_73f6)

;; 07:4149:r_op LOW(call_1f_4bbb)
;; 07:414b:r_op HIGH(call_1f_4bbb)
;; 07:414e:r_op BANK(call_1f_4bbb)

;; 07:418b:r_op LOW(call_02_6e87)
;; 07:418d:r_op HIGH(call_02_6e87)
;; 07:4197:r_op BANK(call_02_6e87)

;; 07:4213:r_op LOW(call_1f_48c4)
;; 07:4215:r_op HIGH(call_1f_48c4)
;; 07:4226:r_op BANK(call_1f_48c4)

;; 07:4232:r_op LOW(call_01_4eb3)
;; 07:4234:r_op HIGH(call_01_4eb3)
;; 07:4237:r_op BANK(call_01_4eb3)

;; 07:4249:r_op LOW(call_01_75c6)
;; 07:424b:r_op HIGH(call_01_75c6)
;; 07:4250:r_op BANK(call_01_75c6)

;; 07:425e:r_op LOW(call_06_569a)
;; 07:4260:r_op HIGH(call_06_569a)
;; 07:426d:r_op BANK(call_06_569a)

;; 07:4276:r_op LOW(call_1f_48c4)
;; 07:4278:r_op HIGH(call_1f_48c4)
;; 07:4289:r_op BANK(call_1f_48c4)

;; 07:42a6:r_op LOW(call_1f_48c4)
;; 07:42a8:r_op HIGH(call_1f_48c4)
;; 07:42b8:r_op BANK(call_1f_48c4)

;; 07:42c4:r_op LOW(call_1f_48c4)
;; 07:42c6:r_op HIGH(call_1f_48c4)
;; 07:42d6:r_op BANK(call_1f_48c4)

;; 07:42df:r_op LOW(call_06_5654)
;; 07:42e1:r_op HIGH(call_06_5654)
;; 07:42ee:r_op BANK(call_06_5654)

;; 07:42fa:r_op LOW(call_06_55ff)
;; 07:42fc:r_op HIGH(call_06_55ff)
;; 07:430a:r_op BANK(call_06_55ff)

07:4552 call_07_4552

;; 07:4553:r_op LOW(call_01_6d5c)
;; 07:4555:r_op HIGH(call_01_6d5c)
;; 07:4558:r_op BANK(call_01_6d5c)

;; 07:4615:r_op LOW(call_1f_6ff1)
;; 07:4617:r_op HIGH(call_1f_6ff1)
;; 07:461a:r_op BANK(call_1f_6ff1)

;; 07:4626:r_op call_05_4040
;; 07:462a:r_op BANK(call_05_4040)

07:4788 call_07_4788

;; 07:4a9f:r_op call_05_73b8
;; 07:4aa3:r_op BANK(call_05_73b8)

;; 07:4ab6:r_op LOW(call_02_6d31)
;; 07:4ab8:r_op HIGH(call_02_6d31)
;; 07:4abb:r_op BANK(call_02_6d31)

;; 07:4ac4:r_op call_05_73f6
;; 07:4ac8:r_op BANK(call_05_73f6)

07:4adb call_07_4adb

;; 07:4b6f:r_op call_05_73f6
;; 07:4b73:r_op BANK(call_05_73f6)

;; 07:4bbb:r_op LOW(call_1f_4bbb)
;; 07:4bbd:r_op HIGH(call_1f_4bbb)
;; 07:4bc0:r_op BANK(call_1f_4bbb)

;; 07:4c12:r_op LOW(call_01_4d67)
;; 07:4c14:r_op HIGH(call_01_4d67)
;; 07:4c1e:r_op BANK(call_01_4d67)

;; 07:4c38:r_op LOW(call_1f_4bbb)
;; 07:4c3a:r_op HIGH(call_1f_4bbb)
;; 07:4c3f:r_op BANK(call_1f_4bbb)

;; 07:5123:r_op call_05_426a
;; 07:5127:r_op BANK(call_05_426a)

;; 07:5159:r_op call_05_4287
;; 07:515d:r_op BANK(call_05_4287)

;; 07:5382:r_op LOW(call_02_6d46)
;; 07:5384:r_op HIGH(call_02_6d46)
;; 07:5387:r_op BANK(call_02_6d46)

;; 07:539b:r_op LOW(call_02_7b9b)
;; 07:539d:r_op HIGH(call_02_7b9b)
;; 07:53a0:r_op BANK(call_02_7b9b)

;; 07:53a9:r_op LOW(call_02_7b9b)
;; 07:53ab:r_op HIGH(call_02_7b9b)
;; 07:53ae:r_op BANK(call_02_7b9b)

;; 07:53f0:r_op LOW(call_02_6d31)
;; 07:53f2:r_op HIGH(call_02_6d31)
;; 07:53f5:r_op BANK(call_02_6d31)

;; 07:5421:r_op LOW(call_02_7b9b)
;; 07:5423:r_op HIGH(call_02_7b9b)
;; 07:5426:r_op BANK(call_02_7b9b)

;; 07:5498:r_op LOW(call_01_7601)
;; 07:549a:r_op HIGH(call_01_7601)
;; 07:549d:r_op BANK(call_01_7601)

;; 07:54b9:r_op LOW(call_02_6e87)
;; 07:54bb:r_op HIGH(call_02_6e87)
;; 07:54c9:r_op BANK(call_02_6e87)

;; 07:54e0:r_op call_05_4253
;; 07:54e4:r_op BANK(call_05_4253)

;; 07:5668:r_op call_05_73b8
;; 07:566c:r_op BANK(call_05_73b8)

07:5d7a data_07_5d7a
07:5d7a .data:0020

07:5d9a call_07_5d9a

;; 07:6353:r_op LOW(call_01_763e)
;; 07:6355:r_op HIGH(call_01_763e)
;; 07:6358:r_op BANK(call_01_763e)

07:63ff call_07_63ff

07:6505 call_07_6505

07:66fe digits_2
;; 07:66fe gbdk 2.95 libc/gb/digits.c:digits
07:66fe .text:0011

;; 07:6715:r_op LOW(call_01_493b)
;; 07:6717:r_op HIGH(call_01_493b)
;; 07:6720:r_op BANK(call_01_493b)

;; 07:67c2:r_op LOW(call_01_7828)
;; 07:67c4:r_op HIGH(call_01_7828)
;; 07:67c7:r_op BANK(call_01_7828)

07:684b data_07_684b
07:684b .text:0005
07:6850 data_07_6850
07:6850 .text:0005
07:6855 data_07_6855
07:6855 .text:0005
07:685a data_07_685a
07:685a .text:0005
07:685f data_07_685f
07:685f .text:0005

07:6864 call_07_6864

;; 07:6c37:r_op LOW(call_02_4679)
;; 07:6c39:r_op HIGH(call_02_4679)
;; 07:6c3c:r_op BANK(call_02_4679)

07:6dee data_pulse_channel_combo_strings
07:6dee data_pulse1_pulse_channel_combo_string_1
07:6dee .text:0006
07:6df4 data_pulse2_pulse_channel_combo_string_1
07:6df4 .text:0006
07:6dfa data_pulse1_pulse2_pulse_channel_combo_string_1
07:6dfa .text:0006
07:6e00 data_pulse1_pulse_channel_combo_string_2
07:6e00 .text:0006
07:6e06 data_pulse2_pulse_channel_combo_string_2
07:6e06 .text:0006
07:6e0c data_pulse1_pulse2_pulse_channel_combo_string_2
07:6e0c .text:0006

;; 07:6e59:r_op LOW(call_04_4caa)
;; 07:6e5b:r_op HIGH(call_04_4caa)
;; 07:6e66:r_op BANK(call_04_4caa)

;; 07:6f58:r_op LOW(call_04_4caa)
;; 07:6f5a:r_op HIGH(call_04_4caa)
;; 07:6f63:r_op BANK(call_04_4caa)

;; 07:7067:r_op call_01_6d3b
;; 07:706b:r_op BANK(call_01_6d3b)

07:7059 call_07_7059

07:7140 data_keyboard_calibration_strings
07:7140 data_keyboard_calibration_title_string
07:7140 .text:0015
07:7155 data_keyboard_calibration_string_1
07:7155 .text:0013
07:7168 data_keyboard_calibration_string_2
07:7168 .text:0011
07:7179 data_keyboard_calibration_string_3
07:7179 .text:000b
07:7184 data_keyboard_calibration_fail_string
07:7184 .text:0006
07:718a data_keyboard_calibration_ok_string
07:718a .text:0004

07:741a data_bank_07_padding
;; 07:741a 07:741a
;; 07:741a:replace:0be6 ds $8000 - @, $ff

1b:4098 data_help_page_index_strings
1b:4098 data_title_help_page_index_string
1b:4098 .text:000f
1b:40a7 data_screens_help_page_index_string
1b:40a7 .text:000a
1b:40b1 data_song_help_page_index_string
1b:40b1 .text:0005
1b:40b6 data_chain_help_page_index_string
1b:40b6 .text:0006
1b:40bc data_phrase_help_page_index_string
1b:40bc .text:0007
1b:40c3 data_instrument_help_page_index_string
1b:40c3 .text:0006
1b:40c9 data_groove_help_page_index_string
1b:40c9 .text:0007
1b:40d0 data_wave_help_page_index_string
1b:40d0 .text:0006
1b:40d6 data_command_list_help_page_index_string
1b:40d6 .text:000e
1b:40e4 data_live_mode_help_page_index_string
1b:40e4 .text:000a
1b:40ee data_select_help_page_index_string
1b:40ee .text:0012
1b:4100 data_mute_help_page_index_string
1b:4100 .text:000e

1b:410e data_help_page_strings
1b:410e data_song_help_page_string
1b:410e .text:00ff
1b:420d .text:003b
1b:4248 data_live_help_page_string
1b:4248 .text:00c6
1b:430e data_chain_help_page_string
1b:430e .text:00ff
1b:440d .text:000d
1b:441a data_phrase_help_page_string
1b:441a .text:00ff
1b:4519 .text:0010
1b:4529 data_instrument_help_page_string
1b:4529 .text:00ea
1b:4613 data_groove_help_page_string
1b:4613 .text:006c
1b:467f data_wave_help_page_string
1b:467f .text:00b0
1b:472f data_command_list_help_page_string
1b:472f .text:00fc
1b:482b data_select_help_page_string
1b:482b .text:00ff
1b:492a .text:0047
1b:4971 data_mute_help_page_string
1b:4971 .text:0087

1b:4a62 call_1b_4a62

;; 1b:4a63:r_op LOW(call_01_6cef)
;; 1b:4a65:r_op HIGH(call_01_6cef)
;; 1b:4a68:r_op BANK(call_01_6cef)

1b:4bc3 call_1b_4bc3

1b:4c6a data_keyboard_keys_strings
1b:4c6a data_keyboard_keys_string_1
1b:4c6a .text:000b
1b:4c75 data_keyboard_keys_string_2
1b:4c75 .text:000b
1b:4c80 data_keyboard_keys_string_3
1b:4c80 .text:000b
1b:4c8b data_keyboard_keys_string_4
1b:4c8b .text:0006
1b:4c91 .data:0005

1b:4e8a call_1b_4e8a

;; 1b:4ea0:r_op LOW(call_01_493b)
;; 1b:4ea2:r_op HIGH(call_01_493b)
;; 1b:4eab:r_op BANK(call_01_493b)

1b:5117 data_save_name_strings
1b:5117 data_save_as_name_string
1b:5117 .text:0009
1b:5120 data_save_name_string
1b:5120 .text:0006

;; 1b:5132:r_op LOW(call_1c_5098)
;; 1b:5134:r_op HIGH(call_1c_5098)
;; 1b:5137:r_op BANK(call_1c_5098)

;; 1b:5173:r_op LOW(call_1c_4e10)
;; 1b:5175:r_op HIGH(call_1c_4e10)
;; 1b:517e:r_op BANK(call_1c_4e10)

;; 1b:522f:r_op LOW(call_01_4a49)
;; 1b:5231:r_op HIGH(call_01_4a49)
;; 1b:523a:r_op BANK(call_01_4a49)

1b:52d8 data_save_progress_strings
1b:52d8 data_save_progress_saving_string
1b:52d8 .text:000a
1b:52e2 data_save_progress_fail_string_1
1b:52e2 .text:0006
1b:52e8 data_save_progress_out_of_memory_string
1b:52e8 .text:000f
1b:52f7 data_save_progress_ok_string
1b:52f7 .text:0006
1b:52fd data_save_progress_fail_string_2
1b:52fd .text:0006

1b:53e8 call_1b_53e8

1b:5707 data_font_1_name_string
1b:5707 .text:0005
1b:570c data_font_2_name_string
1b:570c .text:0005
1b:5711 data_font_3_name_string
1b:5711 .text:0005

1b:5716 data_dmg_palette_1_name_string
1b:5716 .text:0005
1b:571b data_dmg_palette_2_name_string
1b:571b .text:0005
1b:5720 data_dmg_palette_3_name_string
1b:5720 .text:0005
1b:5725 data_dmg_palette_4_name_string
1b:5725 .text:0005

1b:572a .data:000f

1b:5739 data_palette_1_name_string
1b:5739 .text:0005
1b:573e data_palette_2_name_string
1b:573e .text:0005
1b:5743 data_palette_3_name_string
1b:5743 .text:0005
1b:5748 data_palette_4_name_string
1b:5748 .text:0005
1b:574d data_palette_5_name_string
1b:574d .text:0005
1b:5752 data_palette_6_name_string
1b:5752 .text:0005
1b:5757 data_palette_7_name_string
1b:5757 .text:0005

1b:575c .data:0026

1b:59b7 data_project_screen_param_strings
1b:59b7 data_off_project_screen_param_string
1b:59b7 .text:0007
1b:59be data_lsdj_project_screen_param_string
1b:59be .text:0007
1b:59c5 data_midi_project_screen_param_string
1b:59c5 .text:0007
1b:59cc data_keyboard_project_screen_param_string
1b:59cc .text:0007
1b:59d3 data_analog_in_project_screen_param_string
1b:59d3 .text:0007
1b:59da data_analog_out_project_screen_param_string
1b:59da .text:0007
1b:59e1 data_ps2_delay_project_screen_param_string
1b:59e1 .text:000c
1b:59ed data_ticks_project_screen_param_string
1b:59ed .text:000c
1b:59f9 data_empty_project_screen_param_string
1b:59f9 .text:000e

1b:5b56 data_prelisten_strings
1b:5b56 data_prelisten_on_string
1b:5b56 .text:0004
1b:5b5a data_prelisten_off_string
1b:5b5a .text:0004
1b:5b5e data_prelisten_na_string
1b:5b5e .text:0004

1b:5b7a call_1b_5b7a

1b:5d4f data_project_screen_strings_1
1b:5d4f data_project_screen_deep_string_1
1b:5d4f .text:0005
1b:5d54 data_project_screen_slim_string_1
1b:5d54 .text:0005
1b:5d59 data_project_screen_load_save_string
1b:5d59 .text:000f
1b:5d68 data_project_screen_reset_memory_string
1b:5d68 .text:000d
1b:5d75 data_1b_5d75
1b:5d75 .text:0007

1b:5dbf call_1b_5dbf

1b:5c03 data_stat_strings
1b:5c03 data_play_stat_string
1b:5c03 .text:0009
1b:5c0c data_worked_stat_string
1b:5c0c .text:000b

1b:5c17 call_1b_5c17

;; 1b:5c1a:r_op LOW(call_1c_4057)
;; 1b:5c1c:r_op HIGH(call_1c_4057)
;; 1b:5c1f:r_op BANK(call_1c_4057)

;; 1b:5c2c:r_op LOW(call_01_6d5c)
;; 1b:5c2e:r_op HIGH(call_01_6d5c)
;; 1b:5c31:r_op BANK(call_01_6d5c)

;; 1b:5d9a:r_op LOW(call_01_6cef)
;; 1b:5d9c:r_op HIGH(call_01_6cef)
;; 1b:5d9f:r_op BANK(call_01_6cef)

;; 1b:5dab:r_op call_05_4040
;; 1b:5daf:r_op BANK(call_05_4040)

;; 1b:5e78:r_op call_05_4287
;; 1b:5e7c:r_op BANK(call_05_4287)

;; 1b:5ec1:r_op call_05_4253
;; 1b:5ec5:r_op BANK(call_05_4253)

;; 1b:5f5f:r_op LOW(call_07_5d9a)
;; 1b:5f61:r_op HIGH(call_07_5d9a)
;; 1b:5f64:r_op BANK(call_07_5d9a)

;; 1b:6072:r_op LOW(call_01_4c61)
;; 1b:6074:r_op HIGH(call_01_4c61)
;; 1b:6077:r_op BANK(call_01_4c61)

;; 1b:6091:r_op LOW(call_1e_7aa0)
;; 1b:6093:r_op HIGH(call_1e_7aa0)
;; 1b:6096:r_op BANK(call_1e_7aa0)

;; 1b:6158:r_op LOW(call_01_4c61)
;; 1b:615a:r_op HIGH(call_01_4c61)
;; 1b:615d:r_op BANK(call_01_4c61)

;; 1b:617a:r_op LOW(call_1e_7aa0)
;; 1b:617c:r_op HIGH(call_1e_7aa0)
;; 1b:617f:r_op BANK(call_1e_7aa0)

;; 1b:61c4:r_op LOW(call_07_5d9a)
;; 1b:61c6:r_op HIGH(call_07_5d9a)
;; 1b:61c9:r_op BANK(call_07_5d9a)

;; 1b:632b:r_op LOW(call_1e_7aa0)
;; 1b:632d:r_op HIGH(call_1e_7aa0)
;; 1b:6330:r_op BANK(call_1e_7aa0)

;; 1b:635f:r_op LOW(call_07_5d9a)
;; 1b:6361:r_op HIGH(call_07_5d9a)
;; 1b:6364:r_op BANK(call_07_5d9a)

;; 1b:642d:r_op LOW(call_07_5d9a)
;; 1b:642f:r_op HIGH(call_07_5d9a)
;; 1b:6432:r_op BANK(call_07_5d9a)

;; 1b:64aa:r_op LOW(call_1e_7aa0)
;; 1b:64ac:r_op HIGH(call_1e_7aa0)
;; 1b:64af:r_op BANK(call_1e_7aa0)

;; 1b:666a:r_op LOW(call_1c_47b1)
;; 1b:666c:r_op HIGH(call_1c_47b1)
;; 1b:666f:r_op BANK(call_1c_47b1)

;; 1b:66eb:r_op LOW(call_07_5d9a)
;; 1b:66ed:r_op HIGH(call_07_5d9a)
;; 1b:66f0:r_op BANK(call_07_5d9a)

;; 1b:6704:r_op LOW(call_1c_5098)
;; 1b:6706:r_op HIGH(call_1c_5098)
;; 1b:6709:r_op BANK(call_1c_5098)

;; 1b:672a:r_op LOW(call_1f_6278)
;; 1b:672c:r_op HIGH(call_1f_6278)
;; 1b:672f:r_op BANK(call_1f_6278)

;; 1b:6740:r_op LOW(call_1c_5098)
;; 1b:6742:r_op HIGH(call_1c_5098)
;; 1b:6745:r_op BANK(call_1c_5098)

;; 1b:6766:r_op LOW(call_1f_634c)
;; 1b:6768:r_op HIGH(call_1f_634c)
;; 1b:676b:r_op BANK(call_1f_634c)

;; 1b:679d:r_op LOW(call_1c_5098)
;; 1b:679f:r_op HIGH(call_1c_5098)
;; 1b:67a2:r_op BANK(call_1c_5098)

;; 1b:67ab:r_op call_07_7059
;; 1b:67af:r_op BANK(call_07_7059)

;; 1b:67ed:r_op LOW(call_1c_5597)
;; 1b:67ef:r_op HIGH(call_1c_5597)
;; 1b:67f2:r_op BANK(call_1c_5597)

;; 1b:68cd:r_op LOW(call_1c_5098)
;; 1b:68cf:r_op HIGH(call_1c_5098)
;; 1b:68d2:r_op BANK(call_1c_5098)

;; 1b:6916:r_op LOW(call_1c_47b1)
;; 1b:6918:r_op HIGH(call_1c_47b1)
;; 1b:691b:r_op BANK(call_1c_47b1)

;; 1b:6924:r_op LOW(call_01_45d1)
;; 1b:6926:r_op HIGH(call_01_45d1)
;; 1b:6929:r_op BANK(call_01_45d1)

;; 1b:6943:r_op LOW(call_1c_4a46)
;; 1b:6945:r_op HIGH(call_1c_4a46)
;; 1b:6948:r_op BANK(call_1c_4a46)

;; 1b:698e:r_op LOW(call_01_7c94)
;; 1b:6990:r_op HIGH(call_01_7c94)
;; 1b:6997:r_op BANK(call_01_7c94)

;; 1b:69ae:r_op LOW(call_01_6cef)
;; 1b:69b0:r_op HIGH(call_01_6cef)
;; 1b:69b3:r_op BANK(call_01_6cef)

;; 1b:69ca:r_op call_05_4040
;; 1b:69ce:r_op BANK(call_05_4040)

;; 1b:69f6:r_op LOW(call_01_6cef)
;; 1b:69f8:r_op HIGH(call_01_6cef)
;; 1b:69fb:r_op BANK(call_01_6cef)

;; 1b:6a07:r_op call_05_4040
;; 1b:6a0b:r_op BANK(call_05_4040)

;; 1b:6a34:r_op LOW(call_02_7b9b)
;; 1b:6a36:r_op HIGH(call_02_7b9b)
;; 1b:6a39:r_op BANK(call_02_7b9b)

1b:6a5c data_project_screen_strings_2
1b:6a5c data_project_screen_slim_string_2
1b:6a5c .text:0005
1b:6a61 data_project_screen_deep_string_2
1b:6a61 .text:0005
1b:6a66 data_project_screen_reset_cartridge_string
1b:6a66 .text:0011
1b:6a77 data_project_screen_reset_cartridge_yes_string
1b:6a77 .text:0004
1b:6a7b data_project_screen_reset_cartridge_no_string
1b:6a7b .text:0003
1b:6a7e data_project_screen_reset_cartridge_complete_string
1b:6a7e .text:000e

1b:6b7a call_1b_6b7a

1b:754f call_1b_754f

1b:7570 data_bank_1b_padding
;; 1b:7570 1b:7570
;; 1b:7570:replace:0a90 ds $8000 - @, $ff

1c:4047 data_1c_4047
1c:4047 .data:0010

1c:4057 call_1c_4057

1c:40f2 call_1c_40f2

1c:43b9 data_empty_string_1
1c:43b9 .text:0008

1c:47a3 data_verify_string
1c:47a3 .text:000e

1c:47b1 call_1c_47b1

1c:4a46 call_1c_4a46

1c:4c11 data_empty_string_2
1c:4c11 .text:0009

1c:4e10 call_1c_4e10

1c:5098 call_1c_5098

;; 1c:526d:r_op LOW(call_01_45d1)
;; 1c:526f:r_op HIGH(call_01_45d1)
;; 1c:5272:r_op BANK(call_01_45d1)

;; 1c:531a:r_op LOW(call_01_7c94)
;; 1c:531c:r_op HIGH(call_01_7c94)
;; 1c:531e:r_op BANK(call_01_7c94)

1c:534e loading_progress_strings
1c:534e .text:000d
1c:535b .text:0006

1c:5597 call_1c_5597

1c:57ac empty_string_3
1c:57ac .text:000f

1c:57bb call_1c_57bb

;; 1c:57bc:r_op LOW(call_01_6d5c)
;; 1c:57be:r_op HIGH(call_01_6d5c)
;; 1c:57c1:r_op BANK(call_01_6d5c)

1c:589a file_screen_strings
1c:589a .text:0005
1c:589f .text:0005
1c:58a4 .text:0006
1c:58aa .text:0011
1c:58bb .text:0003
1c:58be .text:0003

1c:59e6 call_1c_59e6

;; 1c:5a22:r_op LOW(call_02_77e6)
;; 1c:5a24:r_op HIGH(call_02_77e6)
;; 1c:5a27:r_op BANK(call_02_77e6)

;; 1c:5ae3:r_op LOW(call_01_6cef)
;; 1c:5ae5:r_op HIGH(call_01_6cef)
;; 1c:5ae8:r_op BANK(call_01_6cef)

;; 1c:5c56:r_op LOW(call_1b_4e8a)
;; 1c:5c58:r_op HIGH(call_1b_4e8a)
;; 1c:5c5b:r_op BANK(call_1b_4e8a)

;; 1c:5dd5:r_op LOW(call_01_6cef)
;; 1c:5dd7:r_op HIGH(call_01_6cef)
;; 1c:5dda:r_op BANK(call_01_6cef)

1c:602f erase_file_strings
1c:602f .text:000d
1c:603c .text:0010
1c:604c .text:0011
1c:605d .text:0004
1c:6061 .text:0003
1c:6064 .text:0008
1c:606c .text:0007
1c:6073 .text:0004
1c:6077 .text:0003

1c:60e2 call_1c_60e2

1c:6194 call_1c_6194

1c:6239 call_1c_6239

1c:6281 call_1c_6281

1c:6343 call_1c_6343

1c:6384 call_1c_6384

1c:6495 call_1c_6495

1c:64c1 call_1c_64c1

1c:64ee call_1c_64ee

;; 1c:65e7:r_op call_06_5654
;; 1c:65eb:r_op BANK(call_06_5654)

;; 1c:6628:r_op call_06_55ff
;; 1c:662c:r_op BANK(call_06_55ff)

1c:6a20 call_1c_6a20

1c:6a9a call_1c_6a9a

1c:6bd7 call_1c_6bd7

1c:6dea data_1c_6dea
1c:6dea .data:0070

1c:6f75 call_1c_6f75

1c:70a7 data_upgrading_string
1c:70a7 .text:0010

1c:717c call_1c_717c

1c:72bf call_1c_72bf

1c:7582 data_bank_1c_padding
;; 1c:7582 1c:7582
;; 1c:7582:replace:0a7e ds $8000 - @, $ff

1d:41f6 data_1d_41f6
1d:41f6 .text:0007
1d:41fd data_1d_41fd
1d:41fd .text:0005

1d:4202 call_1d_4202

;; 1d:4219:r_op LOW(call_01_6d5c)
;; 1d:421b:r_op HIGH(call_01_6d5c)
;; 1d:421e:r_op BANK(call_01_6d5c)

;; 1d:422d:r_op LOW(call_1f_6ff1)
;; 1d:422f:r_op HIGH(call_1f_6ff1)
;; 1d:4232:r_op BANK(call_1f_6ff1)

1d:423d call_1d_423d

1d:43f7 call_1d_43f7

;; 1d:4486:r_op call_05_73f6
;; 1d:448a:r_op BANK(call_05_73f6)

;; 1d:449b:r_op LOW(call_01_6cef)
;; 1d:449d:r_op HIGH(call_01_6cef)
;; 1d:44a2:r_op BANK(call_01_6cef)

;; 1d:44ab:r_op call_05_4040
;; 1d:44af:r_op BANK(call_05_4040)

;; 1d:4a21:r_op LOW(call_02_77e6)
;; 1d:4a23:r_op HIGH(call_02_77e6)
;; 1d:4a26:r_op BANK(call_02_77e6)

;; 1d:4a67:r_op LOW(call_02_7b9b)
;; 1d:4a69:r_op HIGH(call_02_7b9b)
;; 1d:4a6c:r_op BANK(call_02_7b9b)

;; 1d:4a87:r_op call_05_426a
;; 1d:4a8b:r_op BANK(call_05_426a)

;; 1d:4b63:r_op call_05_73b8
;; 1d:4b67:r_op BANK(call_05_73b8)

1d:4b8d cancel_select_string_5
1d:4b8d .text:000e
1d:4b9b select_string_5
1d:4b9b .text:0007

;; 1d:4c4e:r_op LOW(call_1c_717c)
;; 1d:4c50:r_op HIGH(call_1c_717c)
;; 1d:4c53:r_op BANK(call_1c_717c)

1d:4c61 cut_string_3
1d:4c61 .text:0004
1d:4c65 copy_string_4
1d:4c65 .text:0005

1d:4cdf paste_string_2
1d:4cdf .text:0006

1d:4d5f call_1d_4d5f

1d:603c call_1d_603c

1d:62fc resync_type_strings
1d:62fc .text:0007
1d:6303 .text:0007
1d:630a .text:0007
1d:6311 .text:0007

1d:63f7 filter_type_strings
1d:63f7 .text:0006
1d:63fd .text:0006
1d:6403 .text:0006
1d:6409 .text:0006
1d:640f .text:0006
1d:6415 .text:0006

1d:65ba distortion_type_strings
1d:65ba .text:0005
1d:65bf .text:0005
1d:65c4 .text:0005

;; 1d:68cf:r_op LOW(call_01_6d5c)
;; 1d:68d1:r_op HIGH(call_01_6d5c)
;; 1d:68d4:r_op BANK(call_01_6d5c)

;; 1d:68e0:r_op LOW(call_1f_6ff1)
;; 1d:68e2:r_op HIGH(call_1f_6ff1)
;; 1d:68e5:r_op BANK(call_1f_6ff1)

;; 1d:68f1:r_op call_05_4040
;; 1d:68f5:r_op BANK(call_05_4040)

1d:68b2 call_1d_68b2

1d:6de4 hand_drawn_waves_warning_strings
1d:6de4 .text:000a
1d:6dee .text:000b
1d:6df9 .text:0007
1d:6e00 .text:0004
1d:6e04 .text:0003

1d:713f call_1d_713f

;; 1d:7226:r_op call_05_7181
;; 1d:722a:r_op BANK(call_05_7181)

;; 1d:7b9a:r_op LOW(call_02_77e6)
;; 1d:7b9c:r_op HIGH(call_02_77e6)
;; 1d:7b9f:r_op BANK(call_02_77e6)

;; 1d:7bc2:r_op LOW(call_02_7b9b)
;; 1d:7bc4:r_op HIGH(call_02_7b9b)
;; 1d:7bc7:r_op BANK(call_02_7b9b)

;; 1d:7be2:r_op call_05_4287
;; 1d:7be6:r_op BANK(call_05_4287)

;; 1d:7c04:r_op call_05_4233
;; 1d:7c08:r_op BANK(call_05_4233)

;; 1d:7c60:r_op call_05_4253
;; 1d:7c64:r_op BANK(call_05_4253)

;; 1d:7cfb:r_op LOW(call_1c_717c)
;; 1d:7cfd:r_op HIGH(call_1c_717c)
;; 1d:7d00:r_op BANK(call_1c_717c)

1d:7d92 data_copied_synth_string
1d:7d92 .text:000d
1d:7d9f data_pasted_synth_string
1d:7d9f .text:000d

1d:7ddf data_bank_1d_padding
;; 1d:7ddf 1d:7ddf
;; 1d:7ddf:replace:0221 ds $8000 - @, $ff

1e:4000 call_1e_4000

1e:432a tileset
1e:432a .image:0300:w64

1e:462a data_1e_462a
1e:462a .data:0082

1e:46ac font_3_content
1e:46ac .image:00470:w64
1e:4b1c .data:0a26
1e:5542 font_1_content
1e:5542 .image:00470:w64
1e:59b2 .data:0a26
1e:63d8 font_2_content
1e:63d8 .image:00470:w64
1e:6848 .data:11b2

1e:7aa0 call_1e_7aa0

1e:7bab data_bank_1e_padding
;; 1e:7bab 1e:7bab
;; 1e:7bab:replace:0455 ds $8000 - @, $ff

1f:4000 call_1f_4000

1f:408d data_instrument_table_type_strings
1f:408d data_step_instrument_table_type_string
1f:408d .text:0005
1f:4092 data_tick_instrument_table_type_string
1f:4092 .text:0005
1f:4097 data_off_instrument_table_type_string
1f:4097 .text:0005

1f:409c call_1f_409c

1f:4113 data_kit_loop_type_strings
1f:4113 data_attack_kit_loop_type_string
1f:4113 .text:0004
1f:4117 data_on_kit_loop_type_string
1f:4117 .text:0004
1f:411b data_off_kit_loop_type_string
1f:411b .text:0004

1f:4157 call_1f_4157

1f:4169 call_1f_4169

1f:418a call_1f_418a

;; 1f:42f9:r_op LOW(call_01_518c)
;; 1f:42fb:r_op HIGH(call_01_518c)
;; 1f:4303:r_op BANK(call_01_518c)

;; 1f:4314:r_op LOW(call_01_522d)
;; 1f:4316:r_op HIGH(call_01_522d)
;; 1f:431e:r_op BANK(call_01_522d)

1f:438f data_instrument_length_strings
1f:438f data_unlim_instrument_length_string
1f:438f .text:0006
1f:4395 data_empty_instrument_length_string
1f:4395 .text:0004

1f:4399 call_1f_4399

;; 1f:4443:r_op LOW(call_01_5208)
;; 1f:4445:r_op HIGH(call_01_5208)
;; 1f:444b:r_op BANK(call_01_5208)

;; 1f:445c:r_op LOW(call_01_522d)
;; 1f:445e:r_op HIGH(call_01_522d)
;; 1f:4466:r_op BANK(call_01_522d)

1f:44a3 data_noise_instrument_param_strings
1f:44a3 data_unlim_noise_instrument_param_string
1f:44a3 .text:0006
1f:44a9 data_empty_noise_instrument_param_string
1f:44a9 .text:0004
1f:44ad data_safe_noise_instrument_param_string
1f:44ad .text:0005
1f:44b2 data_free_noise_instrument_param_string
1f:44b2 .text:0005

1f:44dd call_1f_44dd

;; 1f:460a:r_op LOW(call_03_4a63)
;; 1f:460c:r_op HIGH(call_03_4a63)
;; 1f:4614:r_op BANK(call_03_4a63)

;; 1f:4711:r_op LOW(call_01_518c)
;; 1f:4713:r_op HIGH(call_01_518c)
;; 1f:471b:r_op BANK(call_01_518c)

1f:473e data_1f_473e
1f:473e .text:0004
1f:4742 data_1f_4742
1f:4742 .text:0004
1f:4746 data_1f_4746
1f:4746 .text:0004
1f:474a data_1f_474a
1f:474a .text:0004

1f:474e call_1f_474e

;; 1f:47e6:r_op LOW(call_01_518c)
;; 1f:47e8:r_op HIGH(call_01_518c)
;; 1f:47f0:r_op BANK(call_01_518c)

;; 1f:4801:r_op LOW(call_01_522d)
;; 1f:4803:r_op HIGH(call_01_522d)
;; 1f:480b:r_op BANK(call_01_522d)

;; 1f:482e:r_op call_03_4cf8
;; 1f:4832:r_op BANK(call_03_4cf8)

;; 1f:483b:r_op call_03_4d34
;; 1f:483f:r_op BANK(call_03_4d34)

;; 1f:4848:r_op call_03_49b4
;; 1f:484c:r_op BANK(call_03_49b4)

;; 1f:4855:r_op call_03_4a26
;; 1f:4859:r_op BANK(call_03_4a26)

;; 1f:4862:r_op call_03_49e0
;; 1f:4866:r_op BANK(call_03_49e0)

1f:48c4 call_1f_48c4

1f:4919 data_1f_4919
1f:4919 .data:0010

1f:4929 call_1f_4929

1f:4a25 call_1f_4a25

1f:4a64 call_1f_4a64

;; 1f:4a80:r_op LOW(call_04_41f0)
;; 1f:4a82:r_op HIGH(call_04_41f0)
;; 1f:4a98:r_op BANK(call_04_41f0)

1f:4b8c call_1f_4b8c

1f:4bbb call_1f_4bbb

;; 1f:4c1a:r_op LOW(call_01_4d67)
;; 1f:4c1c:r_op HIGH(call_01_4d67)
;; 1f:4c24:r_op BANK(call_01_4d67)

;; 1f:4c54:r_op LOW(call_01_75c6)
;; 1f:4c56:r_op HIGH(call_01_75c6)
;; 1f:4c59:r_op BANK(call_01_75c6)

;; 1f:502d:r_op LOW(call_01_4f99)
;; 1f:502f:r_op HIGH(call_01_4f99)
;; 1f:5037:r_op BANK(call_01_4f99)

;; 1f:528c:r_op LOW(call_01_4e43)
;; 1f:528e:r_op HIGH(call_01_4e43)
;; 1f:5293:r_op BANK(call_01_4e43)

;; 1f:5330:r_op LOW(call_01_4f59)
;; 1f:5332:r_op HIGH(call_01_4f59)
;; 1f:5337:r_op BANK(call_01_4f59)

;; 1f:53bd:r_op LOW(call_02_6e87)
;; 1f:53bf:r_op HIGH(call_02_6e87)
;; 1f:53cb:r_op BANK(call_02_6e87)

;; 1f:53dd:r_op LOW(call_01_4cfb)
;; 1f:53df:r_op HIGH(call_01_4cfb)
;; 1f:53e9:r_op BANK(call_01_4cfb)

;; 1f:53fd:r_op LOW(call_01_4f59)
;; 1f:53ff:r_op HIGH(call_01_4f59)
;; 1f:5407:r_op BANK(call_01_4f59)

;; 1f:5963:r_op LOW(call_01_4dd3)
;; 1f:5965:r_op HIGH(call_01_4dd3)
;; 1f:596d:r_op BANK(call_01_4dd3)

;; 1f:59df:r_op LOW(call_01_4e43)
;; 1f:59e1:r_op HIGH(call_01_4e43)
;; 1f:59e9:r_op BANK(call_01_4e43)

1f:6278 call_1f_6278

1f:6318 data_dedup_song_strings
1f:6318 data_dedup_song_title_string
1f:6318 .text:000b
1f:6323 data_dedup_song_freeing_string
1f:6323 .text:0009
1f:632c data_dedup_song_chains_string
1f:632c .text:000b
1f:6337 data_1f_6337
1f:6337 .text:0003
1f:633a data_dedup_song_phrases_string
1f:633a .text:000b
1f:6345 data_1f_6345
1f:6345 .text:0003
1f:6348 data_dedup_song_ok_string
1f:6348 .text:0004

1f:634c call_1f_634c

1f:63e8 data_dedup_instruments_strings
1f:63e8 data_dedup_instruments_title_string
1f:63e8 .text:000b
1f:63f3 data_dedup_instruments_freeing_string
1f:63f3 .text:0009
1f:63fc data_dedup_instruments_instruments_string
1f:63fc .text:000b
1f:6407 data_1f_6407
1f:6407 .text:0003
1f:640a data_dedup_instruments_tables_string
1f:640a .text:000b
1f:6415 data_1f_6415
1f:6415 .text:0003
1f:6418 data_dedup_instruments_synths_string
1f:6418 .text:000b
1f:6423 data_1f_6423
1f:6423 .text:0003
1f:6426 data_dedup_instruments_ok_string
1f:6426 .text:0004

1f:642a call_1f_642a

;; 1f:65cf:r_op LOW(call_04_4ce5)
;; 1f:65d1:r_op HIGH(call_04_4ce5)
;; 1f:65d4:r_op BANK(call_04_4ce5)

;; 1f:65dd:r_op LOW(call_1e_4000)
;; 1f:65df:r_op HIGH(call_1e_4000)
;; 1f:65e2:r_op BANK(call_1e_4000)

1f:65f1 call_1f_65f1

1f:6612 call_1f_6612

1f:6633 call_1f_6633

;; 1f:6a9d:r_op LOW(call_1c_717c)
;; 1f:6a9f:r_op HIGH(call_1c_717c)
;; 1f:6aa2:r_op BANK(call_1c_717c)

;; 1f:6abb:r_op LOW(call_04_4ce5)
;; 1f:6abd:r_op HIGH(call_04_4ce5)
;; 1f:6ac0:r_op BANK(call_04_4ce5)

1f:6bac call_1f_6bac

1f:6bc2 call_1f_6bc2

1f:6cd7 call_1f_6cd7

1f:6e7d call_1f_6e7d

1f:6fd7 data_1f_6fd7
1f:6fd7 .data:0004
1f:6fdb data_1f_6fdb
1f:6fdb .data:0004

1f:6fdf data_song_screen_instrument_window_strings
1f:6fdf data_song_screen_instrument_window_mute_string
1f:6fdf .text:0005
1f:6fe4 data_song_screen_instrument_window_l_string
1f:6fe4 .text:0002
1f:6fe6 data_song_screen_instrument_window_r_string
1f:6fe6 .text:0002
1f:6fe8 data_song_screen_instrument_window_channels_string
1f:6fe8 .text:0005
1f:6fed data_song_screen_instrument_window_empty_string
1f:6fed .text:0004

1f:6ff1 call_1f_6ff1

1f:7087 call_1f_7087

;; 1f:708f:r_op LOW(call_01_6cef)
;; 1f:7091:r_op HIGH(call_01_6cef)
;; 1f:7094:r_op BANK(call_01_6cef)

;; 1f:709d:r_op LOW(call_1f_6ff1)
;; 1f:709f:r_op HIGH(call_1f_6ff1)
;; 1f:70a2:r_op BANK(call_1f_6ff1)

;; 1f:70b0:r_op LOW(call_03_45d0)
;; 1f:70b2:r_op HIGH(call_03_45d0)
;; 1f:70b5:r_op BANK(call_03_45d0)

1f:71be data_type_speech_string
1f:71be .text:000e

1f:71cc call_1f_71cc

;; 1f:72c2:r_op LOW(call_1b_4e8a)
;; 1f:72c4:r_op HIGH(call_1b_4e8a)
;; 1f:72c7:r_op BANK(call_1b_4e8a)

;; 1f:7316:r_op call_05_4287
;; 1f:731a:r_op BANK(call_05_4287)

;; 1f:7333:r_op call_05_426a
;; 1f:7337:r_op BANK(call_05_426a)

;; 1f:7350:r_op call_05_4253
;; 1f:7354:r_op BANK(call_05_4253)

;; 1f:736d:r_op call_05_4233
;; 1f:7371:r_op BANK(call_05_4233)

;; 1f:770c:r_op call_03_45fc
;; 1f:7710:r_op BANK(call_03_45fc)

;; 1f:771e:r_op call_03_4644
;; 1f:7722:r_op BANK(call_03_4644)

;; 1f:7738:r_op LOW(call_02_77e6)
;; 1f:773a:r_op HIGH(call_02_77e6)
;; 1f:773d:r_op BANK(call_02_77e6)

;; 1f:775b:r_op LOW(call_02_7b9b)
;; 1f:775d:r_op HIGH(call_02_7b9b)
;; 1f:7760:r_op BANK(call_02_7b9b)

1f:7774 data_copied_word_string
1f:7774 .text:000c
1f:7780 data_cut_word_string
1f:7780 .text:0009
1f:7789 data_pasted_word_string
1f:7789 .text:000c

1f:7795 data_bank_1f_padding
;; 1f:7795 1f:7795
;; 1f:7795:replace:086c ds $8000 - @, $ff

; Memory

00:c402 CURRENT_SCREEN
;; 00:c402 0x01: phrase screen
;; 00:c402 0x02: groove screen
;; 00:c402 0x03: chain screen
;; 00:c402 0x04: song screen
;; 00:c402 0x05: table screen
;; 00:c402 0x06: instrument screen
;; 00:c402 0x07: crash screen
;; 00:c402 0x08: synth screen
;; 00:c402 0x09: project screen
;; 00:c402 0x0a: wave editor screen
;; 00:c402 0x0b: talk screen
;; 00:c402 0x0c: word screen
;; 00:c402 0x0d: file screen
;; 00:c402 0x0e: help screen

00:cbd8 CPU
;; 00:cbd8 gbdk 2.95 libc/gb/crt0.s:__cpu
;; 00:cbd8 GB type (GB, PGB, CGB)
00:cbd9 CPU_2
;; 00:cbd9 GB type 2 (used to check for GBA)

00:cbda MODE
;; 00:cbda gbdk 2.95 libc/gb/crt0.s:.mode
;; 00:cbda Current mode

00:cbdb IO_OUT
;; 00:cbdb gbdk 2.95 libc/gb/global.s:__io_out
;; 00:cbdb IO out byte.

00:cbdd IO_STATUS
;; 00:cbdd gbdk 2.95 libc/gb/global.s:__io_status
;; 00:cbdd Current status of serial IO.

00:cbe0 FONT_CURRENT
;; 00:cbe0 gbdk 2.95 libc/gb/font.ms:font_current
00:cbe3 FONT_FIRST_FREE_TILE
;; 00:cbe3 gbdk 2.95 libc/gb/font.ms:font_first_free_tile
;; 00:cbe3 Cached copy of first free tile.
00:cbe4 FONT_TABLE
;; 00:cbe4 gbdk 2.95 libc/gb/font.ms:font_table

00:cbf6 CURX
;; 00:cbf6 gbdk 2.95 libc/gb/font.ms:.curx
;; 00:cbf6 Current cursor X position.
00:cbf7 CURY
;; 00:cbf7 gbdk 2.95 libc/gb/font.ms:.cury
;; 00:cbf7 Current cursor Y position.

00:cbf8 RANDHI
;; 00:cbf8 gbdk 2.95 libc/gb/rand.s:.randhi
;; 00:cbf8 The random seed upper byte.
00:cbf9 RANDLO
;; 00:cbf9 gbdk 2.95 libc/gb/rand.s:.randlo
;; 00:cbf9 The random seed lower byte.

00:cbfa FG_COLOUR
;; 00:cbfa gbdk 2.95 libc/gb/font.ms:.fg_colour
00:cbfb BG_COLOUR
;; 00:cbfb gbdk 2.95 libc/gb/font.ms:.bg_colour

00:ff80 REFRESH_OAM
;; 00:ff80 gbdk 2.95 libc/gb/global.s:refresh_OAM

00:ff8e CURRENT_BANK
;; 00:ff8e Used to store the current bank number for banked calls.

; Kits

08:4000 kit_1
08:4000 .data:4000
09:4000 kit_2
09:4000 .data:4000
0a:4000 kit_3
0a:4000 .data:4000
0b:4000 kit_4
0b:4000 .data:4000
0c:4000 kit_5
0c:4000 .data:4000
0d:4000 kit_6
0d:4000 .data:4000
0e:4000 kit_7
0e:4000 .data:4000
0f:4000 kit_8
0f:4000 .data:4000
10:4000 kit_9
10:4000 .data:4000
11:4000 kit_10
11:4000 .data:4000
12:4000 kit_11
12:4000 .data:4000
13:4000 kit_12
13:4000 .data:4000
14:4000 kit_13
14:4000 .data:4000
15:4000 kit_14
15:4000 .data:4000
16:4000 kit_15
16:4000 .data:4000
17:4000 kit_16
17:4000 .data:4000
18:4000 kit_17
18:4000 .data:4000
19:4000 kit_18
19:4000 .data:4000
1a:4000 kit_19
1a:4000 .data:4000

20:4000 kit_20
20:4000 .data:4000
21:4000 kit_21
21:4000 .data:4000
22:4000 kit_22
22:4000 .data:4000
23:4000 kit_23
23:4000 .data:4000
24:4000 kit_24
24:4000 .data:4000
25:4000 kit_25
25:4000 .data:4000
26:4000 kit_26
26:4000 .data:4000
27:4000 kit_27
27:4000 .data:4000
28:4000 kit_28
28:4000 .data:4000
29:4000 kit_29
29:4000 .data:4000
2a:4000 kit_30
2a:4000 .data:4000
2b:4000 kit_31
2b:4000 .data:4000
2c:4000 kit_32
2c:4000 .data:4000
2d:4000 kit_33
2d:4000 .data:4000
2e:4000 kit_34
2e:4000 .data:4000
2f:4000 kit_35
2f:4000 .data:4000
30:4000 kit_36
30:4000 .data:4000
31:4000 kit_37
31:4000 .data:4000
32:4000 kit_38
32:4000 .data:4000
33:4000 kit_39
33:4000 .data:4000
34:4000 kit_40
34:4000 .data:4000
35:4000 kit_41
35:4000 .data:4000
36:4000 kit_42
36:4000 .data:4000
37:4000 kit_43
37:4000 .data:4000
38:4000 kit_44
38:4000 .data:4000
39:4000 kit_45
39:4000 .data:4000
3a:4000 kit_46
3a:4000 .data:4000
3b:4000 kit_47
3b:4000 .data:4000
3c:4000 kit_48
3c:4000 .data:4000
3d:4000 kit_49
3d:4000 .data:4000
3e:4000 kit_50
3e:4000 .data:4000
3f:4000 kit_51
3f:4000 .data:4000
